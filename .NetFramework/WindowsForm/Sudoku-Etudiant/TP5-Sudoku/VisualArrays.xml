<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VisualArrays</name>
    </assembly>
    <members>
        <member name="T:VisualArrays.SelectedIndexCollection">
            <summary>
            Représente une collection d'index d'éléments sélectionnés dans une grille.
            </summary>
        </member>
        <member name="M:VisualArrays.SelectedIndexCollection.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise une collection d'index.
            </summary>
            <param name="pOwner">Propriétaire de la collection.</param>
        </member>
        <member name="M:VisualArrays.SelectedIndexCollection.Remove(System.Int32)">
            <summary>
            Supprimer l'index spécifié de la collection.
            </summary>
            <param name="pIndex">Index de la collection.</param>
        </member>
        <member name="M:VisualArrays.SelectedIndexCollection.GetEnumerator">
            <summary>
            Supporte une simple itération sur la collection d'indices.
            </summary>
            <returns>Un index.</returns>
        </member>
        <member name="M:VisualArrays.SelectedIndexCollection.Clear">
            <summary>
            Supprime tous les indexd e la collection.
            </summary>
        </member>
        <member name="M:VisualArrays.SelectedIndexCollection.Contains(System.Int32)">
            <summary>
            Détermine si l'index réside dans la collection.
            </summary>
            <param name="pIndex">Index à localiser.</param>
            <returns>True si l'index est localisé, false sinon.</returns>
        </member>
        <member name="P:VisualArrays.SelectedIndexCollection.Count">
            <summary>
            Obtient le nombre d'éléments de la collection.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualArrayException">
            <summary>
            Définit une exception pour les débordements d'index de ligne ou de colonne.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualArrayException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="pMessage"></param>
        </member>
        <member name="T:VisualArrays.VisualBoolArray">
            <summary>
            Représente une grille dont les cellules sont true ou false.  
            </summary>
        </member>
        <member name="T:VisualArrays.ValueGrid">
            <summary>
            Cette classe représente les propriétés nécessaire pour afficher des graphiques
            </summary>
        </member>
        <member name="T:VisualArrays.BaseGrid">
            <summary>
            Représente une grille contenant des cellules sans contenu particulier.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.NB_COLONNES_MAXIMUM">
            <summary>
            Nombre de colonnes maximum dans la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.NB_RANGÉES_MAXIMUM">
            <summary>
            Nombre de rangées maximum dans la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.NB_COLONNES_MINIMUM">
            <summary>
            Nombre de colonnes minimum dans la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.NB_RANGÉES_MINIMUM">
            <summary>
            Nombre de rangées minimum dans la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.DELAI_DEFAUT">
            <summary>
            Délai par défaut.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.DELAI_MAX">
            <summary>
            Délai maximum autorisé.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.DELAI_MIN">
            <summary>
            Délai minimum autorisé.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.DELAI_INTER_TOUCHES">
            <summary>
            Délai acceptable entre les touches.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.components">
            <summary> 
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.Dispose(System.Boolean)">
            <summary> 
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.InitializeComponent">
            <summary> 
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_tabCells">
            <summary>
            Tableau à 2 dimensions des cellules, chaque cellule contient 1 ou plusieurs VisualElement dans une liste chaînée
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_objRandom">
            <summary>
            Utilisé pour les méthodes des grilles produisants des nombres aléatoires.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_columnHeaders">
            <summary>
            Tableau à 1 dimension des en-têtes de colonnes.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_rowHeader">
            <summary>
            Tableau à 1 dimension des en-têtes des rangées.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_enteteColHaut">
            <summary>
            Obtient ou définit la hauteur réele de l'en-tête des colonnes.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_enteteLgnLarg">
            <summary>
            Obtient ou définit la largeur réele de l'en-tête des rangées.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.m_cellMargin">
            <summary>
            Obtient et définit la bordure autour de chaque cellule.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.m_cellContentAlign">
            <summary>
            Obtient et définit l'alignement du contenu principal pour toutes les cellules.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_delay">
            <summary>
            Obtient et définit le délai d'attente en millisecondes.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.Refresh">
            <summary>
            Force la grille à se redessiner complètement.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_enterKeyNextIndex">
            <summary>
            Obtient ou définit si la touche enter provoque un déplacement automatique du SelectedIndex.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_currentKeyTime">
            <summary>
            Permet de déterminer le délai entre deux touches du clavier.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_readOnly">
            <summary>
            Obtient ou définit si les cellules de la grille sont en lecture seule.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_isUpdating">
            <summary>
            Indique que plusieurs modifications sont sur le point de se produire dans le contenu 
            de la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.BeginUpdate">
            <summary>
            Maintient les performances quand des cellules sont modifiées une par une en empêchant 
            le contrôle de dessiner tant que la méthode EndUpdate n'est pas appelée.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.EndUpdate">
            <summary>
            Reprend la peinture de la grille après qu'elle a été interrompue par la méthode BeginUpdate.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_selectionMode">
            <summary>
            Obtient ou définit le mode de sélection des cellules de la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_addressMode">
            <summary>
            Obtient ou définit le mode d'adressage de la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_addressView">
            <summary>
            Obtient ou définit le mode de visualisation des adresses en mode conception.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_cellAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est true
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_disabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_disabledVisualElement">
            <summary>
            Élément visuel affiché dans le fond des cellules dont l'état Enabled est false.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_selectionVisualElement">
            <summary>
            Élément visuel affiché lorsqu'une cellule est sélectionnée.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.UpdateCellsBkgVisualElement">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.UpdateCellsBkgVisualElement(VisualArrays.IBackgroundAppearance)">
            <summary>
            Change le fond de toutes les cellules d'une VisualBoolArray
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_resizeMode">
            <summary>
            Obtient ou définit le mode de redimentionnement de la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_rowCount">
            <summary>
            Obtient et définit le nombre de rangées dans la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_columnCount">
            <summary>
            Obtient ou définit le nombre de colonnes dans la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.#ctor">
            <summary>
            Initialise une nouvelle instance de la grille avec les valeurs par défaut.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.RandomDirection">
            <summary>
            Génère une direction aléatoire.
            </summary>
            <returns>Une direction aléatoire</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.RandomDirection(VisualArrays.enuDirection)">
            <summary>
            Génère une direction aléatoire différente de celle fournit en paramètre
            </summary>
            <param name="pCurrentDirection">Direction courante</param>
            <returns>Une direction aléatoire différente</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.RandomIndex">
            <summary>
            Génère un nombre aléatoire.
            </summary>
            <returns>Un nombre aléatoire entre 0 et le nombre de cellules de la grille.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.RandomAddress">
            <summary>
            Génère une adresse aléatoire.
            </summary>
            <returns>Une adresse aléatoire sous la forme rangée et colonne.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.RandomInt(System.Int32,System.Int32)">
            <summary>
            Génère un nombre entier aléatoire.
            </summary>
            <param name="pMin">Borne inférieure inclue dans l'intervalle</param>
            <param name="pMax">Borne supérieure exlue de l'intervalle</param>
            <returns>Un nombre aléatoire entre pMin et pMax - 1.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.Wait">
            <summary>
            Permet d'attendre un délai spécifié par la propriété Delay.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.Wait(System.Int32)">
            <summary>
            Permet d'attendre un délai spécifié par le paramètre pDelai.
            </summary>
            <param name="pDelai">Le délai à attendre.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.ResetValues">
            <summary>
            Ré-initialise chaque cellule à sa valeur par défaut.
            </summary>
            ---------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.Clear">
            ---------------------------------------------------------------------------
            <summary>
            Ré-Initialise chaque cellule à son état initial par défaut.
            </summary>
            ---------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawColumnHeader(System.Int32,System.String)">
            <summary>
            Dessiner l'en-tête d'une colonne.
            </summary>
            <param name="pColumn">Colonne à redessiner.</param>
            <param name="pText">Texte à redessiner.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawRowHeader(System.Int32,System.String)">
            <summary>
            Dessiner l'en-tête d'une rangée.
            </summary>
            <param name="pRow">Rangée à redessiner.</param>
            <param name="pText">Texte à redessiner.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawColumnsHeaders(System.Drawing.Graphics,System.Int32,System.String,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Dessine l'en-tête des colonnes.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner</param>
            <param name="pColumn">Index de la colonne de la cellule.</param>
            <param name="pTexte">Texte à dessiner.</param>
            <param name="pCouleur">Couleur du texte.</param>
            <param name="pPolice">Police du texte.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawRowsHeaders(System.Drawing.Graphics,System.Int32,System.String,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Dessine l'en-tête des rangées.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Index de la rangée de la cellule.</param>
            <param name="pTexte">Texte à dessiner.</param>
            <param name="pCouleur">Couleur du texte.</param>
            <param name="pPolice">Police du texte.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawAllHeaders(System.Drawing.Graphics)">
            <summary>
            Dessine le texte des en-têtes de rangées et de colonnes.
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawText(System.Drawing.Graphics,System.Int32,System.Int32,System.String,System.Drawing.Color,System.Drawing.Font,System.Drawing.ContentAlignment)">
            <summary>
            Dessine une chaîne dans la cellule spécifiée.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Index de la rangée de la cellule.</param>
            <param name="pColumn">Index de la colonne de la cellule.</param>
            <param name="pTexte">Texte à dessiner.</param>
            <param name="pCouleur">Couleur du texte.</param>
            <param name="pPolice">Police du texte.</param>
            <param name="pAlignement">Alignement du texte.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawGrid(System.Drawing.Graphics)">
            <summary>
            Dessine le quadrillage dans un objet graphique.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.ReCalculerTaille">
            <summary>
            Recalcule la largeur et la hauteur de la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.CreateSpritesOffScreen(System.Int32,System.Int32)">
            <summary>
            Permet de créer une zone de dessin spécialement pour l'affichage des Sprites
            </summary>
            <param name="pWidth">Largeur du offscreen bitmap</param>
            <param name="pHeight">Hauteur du offscreen bitmap </param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawSelection(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine un rectangle de sélection sur la cellule avec la couleur demandée.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            ----------------------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawAllCells">
            <summary>
            Dessine toutes les cellules de la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.CalculerCouleurEteinte(System.Drawing.Color)">
            <summary>
            Recalcule la couleur afin d'atténuer la couleur d'une cellule éteinte.
            </summary>
            <param name="pCouleur">Couleur à atténuer.</param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.CalculerCouleurAllumée(System.Drawing.Color)">
            <summary>
            Recalcule la couleur afin d'éclaircir une couleur sombre.
            </summary>
            <param name="pCouleur">Couleur à atténuer.</param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.CelluleAPixels(System.Int32,System.Int32)">
            <summary>
            Transforme les coordonnées de la cellule (rangée, colonne) en pixels. 
            </summary>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
            <returns>Coordonnées en pixels.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.PixelsToAddress(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------
            <summary>
            Fournit la rangée et la colonne en fonction des coordonnées en pixels.
            </summary>
            <param name="pX">Position sur l'axe des X en pixels.</param>
            <param name="pY">Position sur l'axe des Y en pixels.</param>
            <returns>Adresse de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.AddressFromIndex(System.Int32)">
            <summary>
            Fournit une adresse sous la forme rangée et colonne à partir d'un index.
            </summary>
            <param name="pIndex">Index de la cellule.</param>
            <returns>Adresse sous la forme rangée et colonne.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.IndexToAddress(System.Int32)">
            <summary>
            Convertit un index en une adresse, en tenant compte du mode d'adressage.
            Lève une exception si l'index est hors limite.
            </summary>
            <param name="pIndex">Index à convertir.</param>
            <returns>Adresse obtenue</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.AddressFromAddressMode(System.Int32,System.Int32)">
            <summary>
            Obtient une adresse en tenant compte du mode d'adressage.
            </summary>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
            <returns>Adresse qui tient compte du mode d'adressage.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.IndexFromAddress(System.Int32,System.Int32)">
            <summary>
            Transforme les coordonnées en un index correspondant 
            aux cellules séquentiellement en tenant compte du ModeAdressage.
            </summary>
            <param name="pRow">Ligne de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>L'index d'une ligne/colonne.</returns>
            -------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawAllCells(System.Drawing.Graphics)">
            <summary>
            Dessine toutes les cellules de la grille dans l'objet graphique.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawAllAddress(System.Drawing.Graphics)">
            <summary>
            Dessine les adresses de chacune des cellules dans l'objet graphique.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawAddress(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine dans un objet graphique, l'adresse de la cellule dont les coordonnées sont fournies.
            </summary>
            <param name="pGraphics">obj graphique où dessiner</param>
            <param name="pRow">Rangée</param>
            <param name="pColumn">Colonne</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawCellContent(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine dans un objet graphique, la cellule dont les coordonnées sont fournies.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawCellBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,VisualArrays.Cell)">
            <summary>
            Dessine le fond d'une cellule.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBounds(System.Int32,System.Int32)">
            <summary>
            Fournit le rectangle englobant une cellule.
            </summary>
            <param name="pRow">Rangée</param>
            <param name="pColumn">Colonne</param>
            <returns>Rectangle calculé</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellSelectionBounds(System.Int32,System.Int32)">
            <summary>
            Fournit le rectangle englobant la sélection.
            </summary>
            <param name="pRow">Rangée</param>
            <param name="pColumn">Colonne</param>
            <returns>Rectangle calculé.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellContentBounds(System.Int32,System.Int32)">
            <summary>
            Fournit le rectangle englobant le contenu d'une cellule en tenant compte de la marge.
            </summary>
            <param name="pRow">Ligne de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Rectangle calculé.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellMiddle(System.Int32,System.Int32)">
            <summary>
            Fournit le point central d'une cellule.
            </summary>
            <param name="pRow">Ligne de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Point centrale de la cellule en pixels.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.UpdateCellAndSprites(System.Int32,System.Int32)">
            <summary>
            Redessine une cellule ainsi que le ou les Sprites qui s'y trouvent.
            </summary>
            <param name="pRow">Rangée de la cellule à mettre à jour</param>
            <param name="pColumn">Colonne de la cellule à mettre à jour</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.UpdateCellAndSprites(System.Int32)">
            <summary>
            Redessine une cellule ainsi que le ou les Sprites qui s'y trouvent.
            </summary>
            <param name="pIndex"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.UpdateSprites(System.Drawing.Rectangle)">
            <summary>
            Dessine à l'écran tous les Sprites qui touchent la zone fournie en paramètre
            </summary>
            <param name="pBounds">Zone à vérifier</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.ResetAllValuesToDefault">
            <summary>
            Initialise toutes les valeurs de cellules à leurs valeurs par défaut.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.ResizeColumnHeader">
            <summary>
            Modifie le nombres de cellules dans l'entête des colonnes
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.ResizeRowHeader">
            <summary>
            Modifie le nombres de cellules dans l'entête des rangées
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.ResizeArrays">
            <summary>
            Modifie le nombre de cellules dans les tableaux à partir des propriétés va_rowCount et va_columnCount.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.Clear(System.Int32)">
            <summary>
            Vide le contenu de la cellule dont l'index est fourni en paramètre.
            </summary>
            <param name="pIndex">Index de la cellule à vider.</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.Clear(System.Int32,System.Int32)">
            <summary>
            Vide le contenu de la cellule à une position.
            </summary>
            <param name="pRow">Rangée de la cellule à vider.</param>
            <param name="pColumn">Colonne de la cellule à vider.</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.IsInputKey(System.Windows.Forms.Keys)">
            -----------------------------------------------------------------------------
            <summary>
            Permet d'intercepter les événements reliés aux touches de déplacement du curseur
            afin de modifier les actions sur la grille.
            </summary>
            <param name="key">La touche courante.</param>
            <returns> Si la touche est acceptée ou non.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnResize(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnEnabledChanged(System.EventArgs)">
            <summary>
            Actuellement il n'y a rien de particulier à faire lorsque la grille n'est plus active
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnMouseLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.HitSprite(System.Int32,System.Int32)">
            <summary>
            Fournit le Sprite en collision avec les coordonnées passées en paramètres
            </summary>
            <param name="pX">Coordonnée X à vérifier</param>
            <param name="pY">Coordonnée Y à vérifier</param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se charge d'un double clic sur une cellule de la grille.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se charge d'un MouseDown sur la grille, cela génère des événements CellMouse...
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SelectNextCell">
            <summary>
            Change le va_selectedIndex à la prochaine plus petite valeur pour une cellule sélectionnée
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se charge d'un MouseUp sur la grille, cela génère des événements CellMouse...
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Se charge d'une opération "Déposer sur la grille".
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnDragLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellVisibility(System.Int32,System.Boolean)">
            <summary>
            Assigne une nouvelle visibilité à une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pVisible">true pour que la cellule soit visible, false autrement</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellVisibility(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Assigne une nouvelle visibilité à une cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pVisible">true pour que la cellule soit visible, false autrement</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DisableSelectedCell">
            <summary>
            Désactive la cellule sélectionnée, lève une exception si aucune cellule n'est sélectionnée
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.DisableCell(System.Int32)">
            <summary>
            Rend inactive la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DisableCell(System.Int32,System.Int32)">
            <summary>
            Rend inactive la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellEnabled(System.Int32,System.Boolean)">
            <summary>
            Assigne un nouvel état à la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pEnabled">true pour que la cellule soit active, false autrement</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellEnabled(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Assigne un nouvel état à la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pEnabled">true pour que la cellule soit active, false autrement</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellReadOnly(System.Int32,System.Boolean)">
            <summary>
            Assigne une nouvelle valeur à la propriété ReadOnly d'une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pReadOnly">true pour que la cellule soit ReadOnly, false autrement</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellReadOnly(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Assigne un nouvel état à la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pReadOnly">true pour que la cellule soit ReadOnly, false autrement</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundZoom(System.Int32,System.Int32)">
            <summary>
            Assigne une nouvelle valeur de zoom à l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pZoom">Zoom à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundZoom(System.Int32,System.Int32,System.Int32)">
            <summary>
            Assigne une nouvelle valeur de zoom à l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pZoom">Zoom à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundImage(System.Int32,System.Drawing.Image)">
            <summary>
            Assigne (si possible) une nouvelle image de fond à l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pImage">Image à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundImage(System.Int32,System.Int32,System.Drawing.Image)">
            <summary>
            Assigne (si possible) une nouvelle image de fond à l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pImage">Image à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundPenWidth(System.Int32,System.Int32)">
            <summary>
            Assigne (si possible) une nouvelle taille de crayon à l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pPenWidth">Taille du crayon utilisé pour tracer la forme</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundPenWidth(System.Int32,System.Int32,System.Int32)">
            <summary>
            Assigne (si possible) une nouvelle taille de crayon à l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pPenWidth">Taille du crayon utilisé pour tracer la forme</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundShape(System.Int32,VisualArrays.enuShape)">
            <summary>
            Assigne (si possible) une nouvelle forme de fond à l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pShape">Forme à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundShape(System.Int32,System.Int32,VisualArrays.enuShape)">
            <summary>
            Assigne (si possible) une nouvelle couleur de fond à l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pShape">Forme à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundBorder(System.Int32,System.Windows.Forms.Padding)">
            <summary>
            Assigne une nouvelle configuration de bordure à la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pBorder">Taille des bordures de la cellule</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundBorder(System.Int32,System.Int32,System.Windows.Forms.Padding)">
            <summary>
            Assigne une nouvelle configuration de bordures à la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pBorder">Taille des bordures de la cellule</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundColor(System.Int32,System.Drawing.Color)">
            <summary>
            Assigne (si possible) une nouvelle couleur de fond à l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pColor">Couleur à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Assigne (si possible) une nouvelle couleur de fond à l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pColor">Couleur à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundVisualElement(System.Int32,VisualArrays.CellVisualElement)">
            <summary>
            Assigne un nouveau VisualElement pour le fond de la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pVisualElement">VisualElement à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundVisualElement(System.Int32,System.Int32,VisualArrays.CellVisualElement)">
            <summary>
            Assigne un nouveau VisualElement pour le fond de la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pVisualElement">VisualElement à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellUserData(System.Int32,System.Object)">
            <summary>
            Assigne un objet de données à une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pUserData">Objet à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellUserData(System.Int32,System.Int32,System.Object)">
            <summary>
            Assigne un objet de données à une cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pUserData">Objet à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellUserContent(System.Int32,VisualArrays.ICellDraw)">
            <summary>
            Assigne un objet de données à une cellule se chargeant de dessiner son contenu
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pUserContent">Objet à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellUserContent(System.Int32,System.Int32,VisualArrays.ICellDraw)">
            <summary>
            Assigne un objet de données à une cellule se chargeant de dessiner son contenu
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pUserContent">Objet à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundImage(System.Int32)">
            <summary>
            Obtient (si possible) l'image de fond de la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Image de fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundImage(System.Int32,System.Int32)">
            <summary>
            Obtient (si possible) l'image de fond de la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Image de fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundPenWidth(System.Int32)">
            <summary>
            Obtient (si possible) la taille du crayon de l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Taille du crayon utilisée</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundPenWidth(System.Int32,System.Int32)">
            <summary>
            Obtient (si possible) la taille du crayon de l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Taille du crayon utilisée</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundBorder(System.Int32)">
            <summary>
            Obtient (si possible) les bordures de l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Bordures utilisées pour dessiner la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundBorder(System.Int32,System.Int32)">
            <summary>
            Obtient (si possible) les bordures de l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Bordures utilisées pour dessiner la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundShape(System.Int32)">
            <summary>
            Obtient (si possible) la forme de l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Forme utilisée pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundShape(System.Int32,System.Int32)">
            <summary>
            Obtient (si possible) la forme de l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Forme utilisée pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundColor(System.Int32)">
            <summary>
            Obtient (si possible) la couleur de fond de l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Couleur utilisée pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundColor(System.Int32,System.Int32)">
            <summary>
            Obtient (si possible) la couleur de fond de l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Couleur utilisée pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundVisualElement(System.Int32)">
            <summary>
            Obtient le VisualElement utilisé pour dessiner le fond de la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>VisualElement utilisé pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundVisualElement(System.Int32,System.Int32)">
            <summary>
            Obtient le VisualElement utilisé pour dessiner le fond de la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>VisualElement utilisé pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundZoom(System.Int32)">
            <summary>
            Obtient le Zoom utilisé pour dessiner le fond de la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Zoom utilisé pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundZoom(System.Int32,System.Int32)">
            <summary>
            Obtient le Zoom utilisé pour dessiner le fond de la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Zoom utilisé pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellUserData(System.Int32)">
            <summary>
            Obtient l'objet de données utilisateur associé à une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Objet de données utilisateur associé à la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellUserData(System.Int32,System.Int32)">
            <summary>
            Obtient l'objet de données utilisateur associé à une cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Objet de données utilisateur associé à la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellUserContent(System.Int32)">
            <summary>
            Obtient l'objet de données utilisateur associé à une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Objet de données utilisateur associé à la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellUserContent(System.Int32,System.Int32)">
            <summary>
            Obtient l'objet de données utilisateur associé à une cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Objet de données utilisateur associé à la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellEnabled(System.Int32)">
            <summary>
            Obtient l'état d'une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>État de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellEnabled(System.Int32,System.Int32)">
            <summary>
            Obtient l'état d'une cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>État de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.ClearCellVisualElements(System.Int32)">
            <summary>
            Supprime tous les 'VisualElement' associés avec la cellule (sauf le background)
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.ClearCellVisualElements(System.Int32,System.Int32)">
            <summary>
            Supprime tous les 'VisualElement' associés avec la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.AddCellVisualElement(System.Int32,VisualArrays.CellVisualElement)">
            <summary>
            Ajoute un nouveau VisualElement sur la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pVisualElement">VisualElement à ajouter</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.AddCellVisualElement(System.Int32,System.Int32,VisualArrays.CellVisualElement)">
            <summary>
            Ajoute un nouveau VisualElement sur la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pVisualElement">VisualElement à ajouter</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellVisualElements(System.Int32)">
            <summary>
            Fournit la liste de tous les 'VisualElement' attachés à cette cellule (sauf le background)
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Liste des éléments visuels attachés à cette cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellVisualElements(System.Int32,System.Int32)">
            <summary>
            Fournit la liste de tous les 'VisualElement' attachés à cette cellule (sauf le background)
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Liste des éléments visuels attachés à cette cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.RemoveCellVisualElement(System.Int32,System.Int32)">
            <summary>
            Supprime le VisualElement à la couche indiquée dans le fond de la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pLayerIndex">Numéro de couche de l'élément à supprimer</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.RemoveCellVisualElement(System.Int32,System.Int32,System.Int32)">
            <summary>
            Supprime le VisualElement à la couche indiquée dans le fond de la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pLayerIndex">Numéro de couche de l'élément à supprimer</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.AnimateSprite(VisualArrays.Sprite,System.Int32)">
            ============================================================================================================
             <summary>
             Permet d'animer le déplacement d'un Sprite de sa position actuelle vers la position pNewIndex
             </summary>
             <param name="pobjSprite">Sprite à déplacer</param>
             <param name="pNewIndex">Nouvelle position ou déplacement le Sprite</param>
        </member>
        <member name="P:VisualArrays.BaseGrid.ColumnHeaderArray">
            <summary>
            Tableau à 1 dimension des en-têtes de colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.RowHeaderArray">
            <summary>
            Tableau à 1 dimension des en-têtes des rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.CellMargin">
            <summary>
            Obtient et définit la bordure autour de chaque cellule.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.CellContentAlign">
            <summary>
            Obtient et définit l'alignement du contenu principal pour toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.CellSize">
            <summary>
            Obtient et définit la largeur et la hauteur des cellules en pixels .
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.Delay">
            <summary>
            Obtient et définit le délai d'attente en millisecondes.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.AllowDrag">
            <summary>
            Indique si le contrôle permet d'utiliser l'opération glisser.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.AllowSelfDrop">
            <summary>
            Indique si le contrôle permet d'utiliser l'opération glisser-déposer sur lui-même.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.TestMode">
            <summary>
            Indique si le contrôle est en mode test.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.EnterKeyNextIndex">
            <summary>
            Obtient ou définit si la touche enter provoque un déplacement automatique du SelectedIndex.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.BaseAddress">
            <summary>
            Obtient et définit l'adresse de base des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.Sprites">
            <summary>
            Obtient la collection des objets Sprite qui s'affiche sur la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.ReadOnly">
            <summary>
            Obtient ou définit si les cellules de la grille sont en lecture seule.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.SelectionMode">
            <summary>
            Obtient ou définit le mode de sélection des cellules de la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.SelectedAddress">
            <summary>
            Obtient ou définit l'adresse de la cellule sélectionnée en tenant compte du mode d'adressage.
            </summary>
            ------------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.BaseGrid.SelectedIndex">
            <summary>
            Obtient ou définit l'index de la cellule sélectionnée en tenant compte du mode d'adressage.
            </summary>
            ------------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.BaseGrid.SelectedAddresss">
            <summary>
            Obtient un tableau des adresses de toutes les cellules sélectionnées
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.SelectedIndices">
            <summary>
            Obtient un tableau des indices de toutes les cellules sélectionnées
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.SelectedIndexChanged">
            <summary>
            Événement qui se produit lorsque la valeur de la propriété SelectedIndex est modifiée.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SelectionChanged">
            <summary>
            Événement qui se produit lorsque la sélection est modifiée.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.BaseGrid.ColumnHeader">
            <summary>
            Détermine différents aspects de l'apparence de l'en-tête des colonnes
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.RowHeader">
            <summary>
            Détermine différents aspects de l'apparence de la sélection
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.AddressMode">
            <summary>
            Obtient ou définit le mode d'adressage de la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.AddressView">
            <summary>
            Obtient ou définit le mode de visualisation des adresses en mode conception.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.CellAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est true
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.DisabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.SelectionAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la sélection
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.GridAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la sélection
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.BackgroundImageLayout">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.ResizeMode">
            <summary>
            Obtient ou définit le mode de redimentionnement de la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.RowCount">
            <summary>
            Obtient et définit le nombre de rangées dans la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.ColumnCount">
            <summary>
            Obtient ou définit le nombre de colonnes dans la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.Length">
            <summary>
            Obtient le nombre de cellules dans la grille.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.LengthChanged">
            <summary>
            Se produit lorsque le nombre de cellules de la grille change.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.EnterKeyPress">
            <summary>
            Se produit lorsque la touche Entrée est enfoncée.
            </summary>
            ------------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseDown">
            <summary>
            Se produit lors d'un MouseDown sur un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseUp">
            <summary>
            Se produit lors d'un MouseDown sur un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseClick">
            <summary>
            Se produit lors d'un MouseClick sur un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseDoubleClick">
            <summary>
            Se produit lors d'un MouseDoubleClick sur un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseEnter">
            <summary>
            Se produit lorsque le pointeur de la souris entre sur un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseLeave">
            <summary>
            Se produit lorsque le pointeur de la souris quitte un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseMove">
            <summary>
            Se produit lorsque le pointeur de la souris se déplace sur un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseDown">
            <summary>
            Se produit lors d'un MouseDown dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseUp">
            <summary>
            Se produit lors d'un MouseDown dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseClick">
            <summary>
            Se produit lors d'un MouseClick dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseDoubleClick">
            <summary>
            Se produit lors d'un MouseDoubleClick dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseEnter">
            <summary>
            Se produit lorsque le pointeur de la souris entre dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseLeave">
            <summary>
            Se produit lorsque le pointeur de la souris quitte une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseMove">
            <summary>
            Se produit lorsque le pointeur de la souris se déplace sur une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.ColumnHeaderMouseDown">
            <summary>
            Se produit lors d'un MouseDown sur l'en-tête des colonnes.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.ColumnHeaderMouseUp">
            <summary>
            Se produit lors d'un MouseUp sur l'en-tête des colonnes.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.ColumnHeaderClick">
            <summary>
            Se produit lors d'un clic sur l'en-tête des colonnes.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.ColumnHeaderDoubleClick">
            <summary>
            Se produit lors d'un DoubleClic sur l'en-tête des colonnes.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.ColumnHeaderMouseEnter">
            <summary>
            Se produit lorsque le pointeur de la souris entre dans une cellule de l'en-tête des colonnes.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.ColumnHeaderMouseLeave">
            <summary>
            Se produit lorsque le pointeur de la souris quitte une cellule de l'en-tête des colonnes.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.RowHeaderMouseDown">
            <summary>
            Se produit lors d'un MouseDown sur l'en-tête des rangées.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.RowHeaderMouseUp">
            <summary>
            Se produit lors d'un MouseUp sur l'en-tête des rangées.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.RowHeaderClick">
            <summary>
            Se produit lors d'un clic sur l'en-tête des rangées.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.RowHeaderDoubleClick">
            <summary>
            Se produit lors d'un DoubleClic sur l'en-tête des rangées.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.RowHeaderMouseEnter">
            <summary>
            Se produit lorsque le pointeur de la souris entre dans une de l'en-tête des colonnes.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.RowHeaderMouseLeave">
            <summary>
            Se produit lorsque le pointeur de la souris quitte une de l'en-tête des colonnes.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.BeforeSpriteDrag">
            -------------------------------------------------------------------------------------
            <summary>
            Se produit juste avant d'enclencher l'opération glisser-déposer d'un Sprite, permettant de la bloquer.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.BeforeCellDrag">
            -------------------------------------------------------------------------------------
            <summary>
            Se produit juste avant d'enclencher l'opération glisser-déposer d'une cellule, permettant de la bloquer.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteDragAndDropOccured">
            -------------------------------------------------------------------------------------
            <summary>
            Se produit lorsqu'un Sprite est glissée-déposée sur la grille.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.CellDragAndDropOccured">
            -------------------------------------------------------------------------------------
            <summary>
            Se produit lorsqu'une cellule est glissée-déposée sur la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.ValueGrid.EndUpdate">
            <summary>
            Reprend la peinture de la grille après qu'elle a été interrompue par la méthode BeginUpdate.
            </summary>
        </member>
        <member name="M:VisualArrays.ValueGrid.SendValueChanged">
            <summary>
            Déclenche l'événement ValueChanged.
            </summary>
        </member>
        <member name="F:VisualArrays.ValueGrid.va_disabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="F:VisualArrays.ValueGrid.va_cellAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est true
            </summary>
        </member>
        <member name="M:VisualArrays.ValueGrid.UpdateCellsBkgVisualElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.ValueGrid.va_specialValueAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la valeur spéciale
            </summary>
        </member>
        <member name="F:VisualArrays.ValueGrid.va_specialValueVisualElement">
            <summary>
            Élément visuel affiché dans le fond des cellules lorsqu'il s'agit de la valeur spéciale.
            </summary>
        </member>
        <member name="M:VisualArrays.ValueGrid.#ctor">
            <summary>
            Initialise les champs concernant la partie graphique.
            </summary>
        </member>
        <member name="M:VisualArrays.ValueGrid.DrawDisabledImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.Single)">
            <summary>
            Dessine une image dont la luminosité est ajustable entre 0 (très pâle) et 1 (très claire)
            </summary>
            <param name="pGraphics"></param>
            <param name="pRect"></param>
            <param name="pImage"></param>
            <param name="pBrightness"></param>
        </member>
        <member name="F:VisualArrays.ValueGrid.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.ValueGrid.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.ValueGrid.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="E:VisualArrays.ValueGrid.ValueChanged">
            <summary>
            Se produit lorsque la valeur d'une ou plusieurs cellules changent.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.ValueGrid.DisabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="P:VisualArrays.ValueGrid.CellAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est true
            </summary>
        </member>
        <member name="P:VisualArrays.ValueGrid.SpecialValueAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la valeur spéciale
            </summary>
        </member>
        <member name="F:VisualArrays.VisualBoolArray.va_tabValues">
            <summary>
            Tableau à 2 dimensions des cellules de la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.#ctor">
            <summary>
            Instancie une grille lumineuse; les cellules sont booléennes, soit allumées ou éteintes.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque le MouseWheel change de valeur
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.ResizeArrays">
            <summary>
            Modifie le nombre de cellules dans le tableau à partir des propriétés RowCount et ColumnCount.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.ResetAllValuesToDefault">
            <summary>
            Initialise tous les digits du tableau à 0.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.DrawCellContent(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine la cellule à l'adresse pRow et pColumn.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.Clear(System.Int32)">
            <summary>
            Vide le contenu de la cellule dont l'index est fournit en paramètre.
            </summary>
            <param name="pIndex">index de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualBoolArray.Clear(System.Int32,System.Int32)">
            <summary>
            Vide le contenu de la cellule dont la rangée et la colonne sont spécifiées.
            </summary>
            <param name="pRow">rangée de la cellule à vider</param>
            <param name="pColumn">colonne de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualBoolArray.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Accepte tous les caractères saisies au clavier
            </summary>
            <param name="e">infos sur la touche pressée</param>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.RandomValue">
            ----------------------------------------------------------------------------------
            <summary>
            Génère aléatoirement la valeur true ou false.
            </summary>
            <returns>True ou false.</returns>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.GetEnumerator">
            <summary>
            Permet de parcourir séquentiellement toutes les cellules de la grille.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.AcceptBeforeValueChanged(System.Boolean)">
            <summary>
            Lance l'événement BeforeValueChanged et récolte un booléen permettant d'annuler la modification
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.ToArray">
            <summary>
                Copie les valeurs du VisualBoolArray vers un nouveau tableau à une dimension.
            </summary>
            <returns>Tableau à une dimension contenant les copies des valeurs du VisualBoolArray</returns>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.To2DArray">
            <summary>
                Copie les valeurs du VisualBoolArray vers un nouveau tableau à 2 dimensions.
            </summary>
            <returns>Tableau à 2 dimensions contenant les copies des valeurs du VisualBoolArray</returns>
        </member>
        <member name="F:VisualArrays.VisualBoolArray.va_specialValueAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la valeur spéciale
            </summary>
        </member>
        <member name="F:VisualArrays.VisualBoolArray.va_cellAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est true
            </summary>
        </member>
        <member name="F:VisualArrays.VisualBoolArray.va_disabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.ToString">
            <summary>
            Fournit les valeurs de la grille sous la forme d'une chaîne avec les indices soit en 1D ou 2D
            selon la valeur de la propriété AddressView.
            </summary>
            <returns>Liste des valeurs de la grille</returns>
        </member>
        <member name="F:VisualArrays.VisualBoolArray.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolArray.SelectedValue">
            <summary>
            Obtient la valeur de la cellule sélectionnée
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolArray.Item(System.Int32)">
            <summary>
            Obtient ou définit la valeur à l'index spécifié en tenant compte du ModeAdressage.
            </summary>
            <param name="pIndex">index du digit</param>
            <returns>valeur à l'index</returns>
        </member>
        <member name="P:VisualArrays.VisualBoolArray.Item(System.Int32,System.Int32)">
            <summary>
            Obtient ou définit la valeur d'une cellule en tenant compte du mode d'adressage.
            </summary>
            <param name="pRow">La rangée de la cellule. </param>
            <param name="pColumn">La colonne de la cellule.</param>
            <returns>Le valeur à la coordonnée spécifiée.</returns>
        </member>
        <member name="E:VisualArrays.VisualBoolArray.BeforeValueChanged">
            <summary>
            Se produit juste avant le changement de valeur d'une cellule.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.VisualBoolArray.SpecialValueAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolArray.CellAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est true
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolArray.DisabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolArray.DefaultValue">
            <summary>
            Obtient ou définit la valeur par défaut de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolArray.SpecialValue">
            <summary>
            Obtient ou définit la valeur spéciale à afficher différement des autres valeurs.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualIntArray">
            <summary>
            Représente une grille permettant l'affichage par segments de chiffres ou de symboles.  
            </summary>
        </member>
        <member name="T:VisualArrays.GraphVisualArray">
            <summary>
            Cette classe représente les propriétés nécessaire pour afficher des graphiques
            </summary>
        </member>
        <member name="F:VisualArrays.GraphVisualArray.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.GraphVisualArray.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.GraphVisualArray.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="F:VisualArrays.GraphVisualArray.va_allowGraphClick">
            <summary>
            Indique si le contrôle permet la saisie d'une valeur directement en cliquant dans la cellule
            </summary>
        </member>
        <member name="M:VisualArrays.GraphVisualArray.SetValue(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pIndex"></param>
            <param name="pPixelOffset"></param>
        </member>
        <member name="M:VisualArrays.GraphVisualArray.#ctor">
            <summary>
            Initialise les champs concernant la partie graphique.
            </summary>
        </member>
        <member name="P:VisualArrays.GraphVisualArray.AllowGraphClick">
            <summary>
            Indique si le contrôle permet la saisie d'une valeur directement en cliquant dans la cellule
            </summary>
        </member>
        <member name="P:VisualArrays.GraphVisualArray.GraphAppearance">
            <summary>
            Détermine différents aspects de l'apparence en mode graphique
            </summary>
        </member>
        <member name="F:VisualArrays.VisualIntArray.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualIntArray.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualIntArray.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="F:VisualArrays.VisualIntArray.va_tabValues">
            <summary>
            Tableau à 2 dimensions des cellules de la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualIntArray.#ctor">
            <summary>
            Initialise une nouvelle instance de la grille avec les valeurs par défaut.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualIntArray.Clear(System.Int32)">
            <summary>
            Vide le contenu de la cellule dont l'index est fournit en paramètre.
            </summary>
            <param name="pIndex">index de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualIntArray.Clear(System.Int32,System.Int32)">
            <summary>
            Vide le contenu de la cellule dont la rangée et la colonne sont spécifiées.
            </summary>
            <param name="pRow">rangée de la cellule à vider</param>
            <param name="pColumn">colonne de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualIntArray.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque le MouseWheel change de valeur
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualIntArray.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Accepte les touches 0 à 9 pour la saisie de nombres.
            </summary>
            <param name="e">infos sur la touche pressée</param>
        </member>
        <member name="M:VisualArrays.VisualIntArray.ResizeArrays">
            <summary>
            Modifie le nombre de cellules dans le tableau à partir des propriétés RowCount et ColumnCount.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualIntArray.ResetAllValuesToDefault">
            <summary>
            Initialiser tous les digits du tableau à 0.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualIntArray.DrawCellContent(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine la cellule à l'adresse pRow et pColumn.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
        </member>
        <member name="M:VisualArrays.VisualIntArray.DessinerSegments(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Dessiner le contenu d'une cellule en mode view Digit
            </summary>
            <param name="pGraphics"></param>
            <param name="pRectangle"></param>
            <param name="pValue"></param>
        </member>
        <member name="M:VisualArrays.VisualIntArray.RandomValue">
            <summary>
            Fournit un nombre aléatoire entier, choisi entre les valeurs des propriétés 'Minimum' et 'Maximum' 
            inclusivement.
            </summary>
            <returns>Un nombre aléatoire entier entre 'Minimum' et 'Maximum' inclusivement</returns>
        </member>
        <member name="M:VisualArrays.VisualIntArray.AcceptBeforeValueChanged(System.Int32)">
            <summary>
            Lance l'événement BeforeValueChanged et récolte un booléen permettant d'annuler la modification
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualIntArray.GetEnumerator">
            <summary>
            Permet de parcourir séquentiellement toutes les cellules de la grille.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualIntArray.ToArray">
            <summary>
                Copie les valeurs du VisualIntArray vers un nouveau tableau à une dimension.
            </summary>
            <returns>Tableau à une dimension contenant les copies des valeurs du VisualIntArray</returns>
        </member>
        <member name="M:VisualArrays.VisualIntArray.To2DArray">
            <summary>
                Copie les valeurs du VisualIntArray vers un nouveau tableau à 2 dimensions.
            </summary>
            <returns>Tableau à 2 dimensions contenant les copies des valeurs du VisualIntArray</returns>
        </member>
        <member name="M:VisualArrays.VisualIntArray.ToString">
            <summary>
            Fournit les valeurs de la grille sous la forme d'une chaîne avec les indices soit en 1D ou 2D
            selon la valeur de la propriété AddressView.
            </summary>
            <returns>Liste des valeurs de la grille</returns>
        </member>
        <member name="P:VisualArrays.VisualIntArray.SelectedValue">
            <summary>
            Obtient la valeur de la cellule sélectionnée
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.DigitColor">
            <summary>
            Obtient et définit la couleur des segments allumés.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.Minimum">
            <summary>
            Obtient et définit la valeur minimale pour toutes les cellules de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.Maximum">
            <summary>
            Obtient ou définit la valeur maximale pour toutes les cellules de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.View">
            <summary>
            Obtient et définit le style de visualisation pour les valeurs de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.Item(System.Int32)">
            <summary>
            Obtient ou définit le digit à l'index spécifié en tenant compte du ModeAdressage.
            </summary>
            <param name="pIndex">index du digit</param>
            <returns></returns>
        </member>
        <member name="P:VisualArrays.VisualIntArray.Item(System.Int32,System.Int32)">
            <summary>
            Obtient ou définit le nombre à la cellule dont la ligne et la colonne 
            sont spécifiées en tenant compte du mode d'adressage.
            </summary>
            <param name="pRow">rangée de la cellule à traiter</param>
            <param name="pColumn">colonne de la cellule à traiter</param>
            <returns>nombre à la coordonnée spécifié</returns>
        </member>
        <member name="E:VisualArrays.VisualIntArray.BeforeValueChanged">
            <summary>
            Se produit juste avant le changement de valeur d'une cellule.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.VisualIntArray.DefaultValue">
            <summary>
            Obtient ou définit la valeur par défaut de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.SpecialValue">
            <summary>
            Obtient ou définit la valeur spéciale à afficher différement des autres valeurs.
            </summary>
        </member>
        <member name="T:VisualArrays.ImageElement">
            <summary>
            Représente un élément visuel affichant une image.
            </summary>
        </member>
        <member name="T:VisualArrays.CellVisualElement">
            <summary>
            Représente un élément visuel apparaissant sur une cellule d'une grille.
            </summary>
        </member>
        <member name="M:VisualArrays.CellVisualElement.#ctor">
            <summary>
            Initialise un élément visuel.
            </summary>
        </member>
        <member name="F:VisualArrays.CellVisualElement.va_zoom">
            <summary>
            Obtient ou définit le facteur d'agrandissement de la représentation de l'élément visuel.
            </summary>
        </member>
        <member name="F:VisualArrays.CellVisualElement.va_margin">
            <summary>
            Obtient ou définit la marge autour de l'élément visuel.
            </summary>
        </member>
        <member name="F:VisualArrays.CellVisualElement.va_alignment">
            <summary>
            Obtient ou définit l'alignement de l'élément sur une cellule.
            </summary>
        </member>
        <member name="M:VisualArrays.CellVisualElement.BoundsFromAlignment(System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.ContentAlignment)">
            <summary>
            Fournit un rectangle permettant d'aligner un élément sur une cellule.
            </summary>
            <param name="pCellBounds">Taille de la cellule sur lequel le Sprite apparaît.</param>
            <param name="pSize">Taille de l'élément à aligner.</param>
            <param name="pAlignment">Alignement.</param>
        </member>
        <member name="M:VisualArrays.CellVisualElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Dessine le Sprite dans le graphique.
            </summary>
            <param name="pGraphics">Graphique dans lequel le Sprite doit se dessiner.</param>
            <param name="pBounds">Zone dans lequel le Sprite doit être dessiné</param>
        </member>
        <member name="P:VisualArrays.CellVisualElement.NextVisualElement">
            <summary>
            Prochain élément visuel à dessiner sur la cellule
            </summary>
        </member>
        <member name="P:VisualArrays.CellVisualElement.Zoom">
            <summary>
            Obtient ou définit le facteur d'agrandissement de la représentation de l'élément visuel.
            </summary>
        </member>
        <member name="P:VisualArrays.CellVisualElement.Margin">
            <summary>
            Obtient ou définit la marge autour de l'élément visuel.
            </summary>
        </member>
        <member name="P:VisualArrays.CellVisualElement.Alignment">
            <summary>
            Obtient ou définit l'alignement de l'élément sur une cellule.
            </summary>
        </member>
        <member name="M:VisualArrays.ImageElement.#ctor(System.Drawing.Image)">
            <summary>
            Initialise un élément visuel affichant une image.
            </summary>
            <param name="pImage">Image à utiliser.</param>
        </member>
        <member name="M:VisualArrays.ImageElement.#ctor(System.Drawing.Image,System.Int32)">
            <summary>
            Initialise un élément visuel affichant une image.
            </summary>
            <param name="pImage">Image à utiliser.</param>
            <param name="pZoom">Facteur d'agrandissement de l'image.</param>
        </member>
        <member name="M:VisualArrays.ImageElement.#ctor(System.Drawing.Image,System.Int32,System.Drawing.ContentAlignment)">
            <summary>
            Initialise un élément visuel affichant une image.
            </summary>
            <param name="pImage">Image à utiliser.</param>
            <param name="pZoom">Facteur d'agrandissement de l'image.</param>
            <param name="pAlignment">Alignement de l'élément visuel.</param>
        </member>
        <member name="M:VisualArrays.ImageElement.#ctor(System.String,System.Int32,System.Drawing.ContentAlignment)">
            <summary>
            Initialise un élément visuel affichant une image.
            </summary>
            <param name="pImageFileName">`Nom du fichier contenant l'image.</param>
            <param name="pZoom">Facteur d'aggrandissement de l'image.</param>
            <param name="pAlignment">Alignement de l'élément visuel.</param>
        </member>
        <member name="M:VisualArrays.ImageElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Dessine l'élément visuel avec l'image courante.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pBounds"></param>
        </member>
        <member name="P:VisualArrays.ImageElement.Image">
            <summary>
            Obtient ou définit l'image associée avec l'ImageElement.
            </summary>
        </member>
        <member name="T:VisualArrays.ImageSprite">
            <summary>
            Représente un 'Sprite' utilisant une image pour se dessiner
            </summary>
        </member>
        <member name="T:VisualArrays.Sprite">
            <summary>
            Représente un objet visuel qui se déplace sur une grille
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.va_bounds">
            <summary>
            Spécifie l'emplacement du Sprite dans la VisualArray en pixels
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.va_offsetX">
            <summary>
            Spécifie le déplacement horizontale en pixels à appliquer sur l'emplacement du Sprite
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.va_offsetY">
            <summary>
            Spécifie le déplacement verticale en pixels à appliquer sur l'emplacement du Sprite
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.va_alignment">
            <summary>
            Obtient ou définit l'alignement de l'élément sur une cellule.
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.RecalcBounds">
            <summary>
            Calcul le rectangle contour du Sprite en fonction de son alignement et de son DisplayIndex
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.RecalcBoundsAndRedraw">
            <summary>
            Calcul le rectangle contour du Sprite en fonction de son alignement et de son DisplayIndex.
            Cette version redessine le Sprite à une nouvelle position en tenant compte de la distance de son déplacement.
            Pour un petit déplacement une seule zone est redessinée autrement 2 zones sont redessinées
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.va_allowDrag">
            <summary>
            Obtient ou définit si le Sprite peut faire partie d'une opération glisser-déposer.
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.va_animated">
            <summary>
            Obtient ou définit si le déplacement du Sprite doit être animé ou non.
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.va_duration">
            <summary>
            Obtient ou définit la durée utilisée pour animer le déplacement du Sprite
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.va_frameRate">
            <summary>
            Obtient ou définit la définition en image par secondes de l'animation du déplacement du Sprite
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.Animate(System.Int32)">
            <summary>
            Permet de déplacer graduellement le Sprite d'un DisplayIndex à un autre 
            </summary>
            <param name="pFuturIndex">Index futur à atteindre</param>
        </member>
        <member name="F:VisualArrays.Sprite.va_displayIndex">
            <summary>
            Obtient sous forme d'index l'emplacement de l'item sur la grille propriétaire
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveTo(System.Drawing.Point)">
            <summary>
            Déplace le Sprite à un emplacement spécifié en pixels, lorsque le Sprite est déplacé par
            cette méthode il devient automatiquement un Sprite libre dont le DisplayIndex devient NO_INDEX
            et son Address devient NO_ADDRESS.
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveRight">
            <summary>
            Déplace le Sprite à la colonne suivante.
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveLeft">
            <summary>
            Déplace le Sprite à la colonne précédente
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveUp">
            <summary>
            Déplace le Sprite à la rangée précédente
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveDown">
            <summary>
            Déplace le Sprite à la rangée suivante
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveTo(System.Int32,System.Int32)">
            <summary>
            Déplace le Sprite à un nouvel emplacement sur la grille.
            </summary>
            <param name="pRow">Rangée dans la grille.</param>
            <param name="pColumn">Colonne dans la grille.</param>
        </member>
        <member name="F:VisualArrays.Sprite.va_direction">
            <summary>
            Obtient ou définit la direction courante du Sprite utilisée lors d'un déplacement d'un pas.
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveOneStep">
            <summary>
            Déplace le Sprite d'un seul pas dans la direction courante.
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.ChangeDirection">
            <summary>
            Change la direction du Sprite pour la direction suivante selon l'ordre suivant  : Left, Top, Right, Bottom
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.ChangeDirection(System.Boolean)">
            <summary>
            Change la direction du Sprite pour une direction différente, séquentiellement ou aléatoirement.
            </summary>
            <param name="pRandomDirection">true, pour que la nouvelle direction soit choisie aléatoirement</param>
        </member>
        <member name="F:VisualArrays.Sprite.va_owner">
            <summary>
            VisualArray propriétaire de ce Sprite.
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.va_visible">
            <summary>
            Obtient ou définit si l'élément est visible ou masqué.
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.#ctor">
            <summary>
            Initialise une instance de la classe Sprite
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.Refresh">
            <summary>
            Force le 'Sprite' à se redessiner et à redessiner tous les éléments à cet emplacement
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.Draw(System.Drawing.Graphics)">
            <summary>
            Dessine ce 'Sprite'.
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.Sprite.BringToFront">
            <summary>
            Place le 'Sprite' à l'avant plan devant tous les autres Sprites
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.SendToBack">
            <summary>
            Place le 'Sprite' au dernier plan derrière tous les autres Sprites
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Bounds">
            <summary>
            Spécifie l'emplacement et la taille du Sprite dans la VisualArray en pixels
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.OffsetX">
            <summary>
            Spécifie le déplacement horizontale en pixels à appliquer sur l'emplacement du Sprite
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.OffsetY">
            <summary>
            Spécifie le déplacement verticale en pixels à appliquer sur l'emplacement du Sprite
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Alignment">
            <summary>
            Obtient ou définit l'alignement de l'élément sur une cellule.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.AllowDrag">
            <summary>
            Obtient ou définit si le Sprite peut faire partie d'une opération glisser-déposer.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Animated">
            <summary>
            Obtient ou définit si le déplacement du Sprite doit être animé ou non.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Duration">
            <summary>
            Obtient ou définit la durée utilisée pour animer le déplacement du Sprite
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.FrameRate">
            <summary>
            Obtient ou définit la définition en image par secondes de l'animation du déplacement du Sprite
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.DisplayIndex">
            <summary>
            Obtient sous forme d'index l'emplacement du 'Sprite' sur la grille propriétaire
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.DisplayAddress">
            <summary>
            Obtient ou définit l'adresse du Sprite sur la grille propriétaire.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Direction">
            <summary>
            Obtient ou définit la direction courante du Sprite utilisée lors d'un déplacement d'un pas.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.NextStepAddress">
            <summary>
            Fournit l'adresse future du Sprite si on le déplace d'un pas dans la direction courante avec MoveOneStep()
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Owner">
            <summary>
            VisualArray propriétaire de ce Sprite.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Visible">
            <summary>
            Obtient ou définit si l'élément est visible ou masqué.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Size">
            <summary>
            Obtient et définit la largeur et la hauteur du Sprite en pixels .
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Name">
            <summary>
            Obtient ou définit le nom du Sprite
            </summary>
        </member>
        <member name="M:VisualArrays.ImageSprite.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.ImageSprite.m_image">
            <summary>
            Obtient et définit l'image du 'SpriteOne'.
            </summary>
        </member>
        <member name="M:VisualArrays.ImageSprite.Draw(System.Drawing.Graphics)">
            <summary>
            Dessine un 'Sprite' utilisant une image pour se représenter
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="P:VisualArrays.ImageSprite.ImageList">
            <summary>
            Obtient et définit l'ImageList utilisé pour dessiner le Sprite
            </summary>
        </member>
        <member name="P:VisualArrays.ImageSprite.ImageIndex">
            <summary>
            Obtient et définit l'index de l'image utilisée pour dessiner le Sprite
            </summary>
        </member>
        <member name="P:VisualArrays.ImageSprite.Image">
            <summary>
            Obtient et définit l'image du 'SpriteOne'.
            </summary>
        </member>
        <member name="T:VisualArrays.DisabledAppearance">
            <summary>
            Fournit les informations concernant l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="T:VisualArrays.IBackgroundAppearance">
            <summary>
            Définit les éléments nécessaires pour contrôler l'apparence du fond des cellules
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.Radius">
            <summary>
            Obtient et définit la radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.Shape">
            <summary>
            Obtient et définit la forme utilisée pour dessiner le fond de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.Image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.PenWidth">
            <summary>
            Obtient et définit la taille du crayon pour dessiner une forme contour.
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.Style">
            <summary>
            Obtient et définit le style de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.Border">
            <summary>
            Obtient et définit la taille des bordures autour des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.BackgroundColor">
            <summary>
            Obtient et définit la couleur de fond des cellules.
            </summary>
        </member>
        <member name="F:VisualArrays.DisabledAppearance.m_owner">
            <summary>
            VisualArray qui possède cette instance
            </summary>
        </member>
        <member name="M:VisualArrays.DisabledAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un DisabledAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire</param>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.Border">
            <summary>
            Obtient et définit la taille des bordures autour d'une cellule Enabled false
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.BackgroundColor">
            <summary>
            Obtient et définit la couleur de la forme ou de la bordure d'une cellule Enabled false.
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.Image">
            <summary>
            Obtient ou définit l'image affichée derrière une cellule Enabled false
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.Shape">
            <summary>
            Obtient ou définit la forme dessinée derrière une cellule Enabled false
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.PenWidth">
            <summary>
            Obtient ou définit la taille du crayon utilisé pour dessiner la forme derrière une cellule Enabled false
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.Style">
            <summary>
            Obtient et définit le style de fond pour une cellule Enabled false
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.VGCellAppearance">
            <summary>
            Fournit les informations concernant l'apparence des cellules dont l'état Enabled est true
            </summary>
        </member>
        <member name="F:VisualArrays.VGCellAppearance.m_owner">
            <summary>
            Initialise un BackgroundAppearance object
            </summary>
        </member>
        <member name="M:VisualArrays.VGCellAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un VGCellAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="F:VisualArrays.VGCellAppearance.m_imageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la cellule en mode View ImageList
            </summary>
        </member>
        <member name="F:VisualArrays.VGCellAppearance.m_image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance.Font">
            <summary>
            Obtient ou définit la police utilisée pour afficher les valeurs.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance.TextColor">
            <summary>
            Obtient et définit la couleur du texte dans les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance.ImageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la cellule en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance.Shape">
            <summary>
            Obtient et définit la forme utilisée pour dessiner le fond de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance.Image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance.PenWidth">
            <summary>
            Obtient et définit la taille du crayon pour dessiner une forme contour.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance.Style">
            <summary>
            Obtient et définit le style de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance.Border">
            <summary>
            Obtient et définit la taille des bordures autour des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance.BackgroundColor">
            <summary>
            Obtient et définit la couleur de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualStringArray">
            <summary>
            Représente une grille dont les cellules sont chaînes de caractères.  
            </summary>
        </member>
        <member name="F:VisualArrays.VisualStringArray.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualStringArray.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualStringArray.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="F:VisualArrays.VisualStringArray.va_tabValues">
            <summary>
            Tableau à 2 dimensions des cellules de la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualStringArray.#ctor">
            <summary>
            Instancie une grille visuelle de caractères.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualStringArray.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Accepte tous les caractères saisies au clavier jsuqu'à concurrence de MaxLength
            </summary>
            <param name="e">infos sur la touche pressée</param>
        </member>
        <member name="M:VisualArrays.VisualStringArray.ResizeArrays">
            <summary>
            Modifie le nombre de cellules dans le tableau à partir des propriétés RowCount et ColumnCount.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualStringArray.ResetAllValuesToDefault">
            <summary>
            Initialise toutes les cellules au caractère 0
            </summary>
        </member>
        <member name="M:VisualArrays.VisualStringArray.DrawCellContent(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine la cellule à l'adresse pRow et pColumn.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
        </member>
        <member name="M:VisualArrays.VisualStringArray.Clear(System.Int32)">
            <summary>
            Vide le contenu de la cellule dont l'index est fournit en paramètre.
            </summary>
            <param name="pIndex">index de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualStringArray.Clear(System.Int32,System.Int32)">
            <summary>
            Vide le contenu de la cellule dont la rangée et la colonne sont spécifiées.
            </summary>
            <param name="pRow">rangée de la cellule à vider</param>
            <param name="pColumn">colonne de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualStringArray.GetEnumerator">
            <summary>
            Permet de parcourir séquentiellement toutes les cellules de la grille.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualStringArray.AcceptBeforeValueChanged(System.String)">
            <summary>
            Lance l'événement BeforeValueChanged et récolte un booléen permettant d'annuler la modification
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualStringArray.ToArray">
            <summary>
                Copie les valeurs du VisualStringArray vers un nouveau tableau à une dimension.
            </summary>
            <returns>Tableau à une dimension contenant les copies des valeurs du VisualStringArray</returns>
        </member>
        <member name="M:VisualArrays.VisualStringArray.To2DArray">
            <summary>
                Copie les valeurs du VisualStringArray vers un nouveau tableau à 2 dimensions.
            </summary>
            <returns>Tableau à 2 dimensions contenant les copies des valeurs du VisualStringArray</returns>
        </member>
        <member name="M:VisualArrays.VisualStringArray.ToString">
            <summary>
            Fournit les valeurs de la grille sous la forme d'une chaîne avec les indices soit en 1D ou 2D
            selon la valeur de la propriété AddressView.
            </summary>
            <returns>Liste des valeurs de la grille</returns>
        </member>
        <member name="P:VisualArrays.VisualStringArray.SelectedValue">
            <summary>
            Obtient la valeur de la cellule sélectionnée
            </summary>
        </member>
        <member name="P:VisualArrays.VisualStringArray.MaxLength">
            <summary>
            Obtient ou définit le nombre maximum de caractères que l'on peut saisir dans les cellules
            </summary>
        </member>
        <member name="P:VisualArrays.VisualStringArray.View">
            <summary>
            Obtient et définit le style de visualisation pour les valeurs de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualStringArray.Item(System.Int32)">
            <summary>
            Obtient ou définit la valeur à l'index spécifié en tenant compte du ModeAdressage.
            </summary>
            <param name="pIndex">index de la cellule</param>
            <returns>valeur à l'index</returns>
        </member>
        <member name="P:VisualArrays.VisualStringArray.Item(System.Int32,System.Int32)">
            <summary>
            Obtient ou définit la valeur d'une cellule en tenant compte du mode d'adressage.
            </summary>
            <param name="pRow">La rangée de la cellule. </param>
            <param name="pColumn">La colonne de la cellule.</param>
            <returns>La valeur à la coordonnée spécifiée.</returns>
        </member>
        <member name="E:VisualArrays.VisualStringArray.BeforeValueChanged">
            <summary>
            Se produit juste avant le changement de valeur d'une cellule.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.VisualStringArray.DefaultValue">
            <summary>
            Obtient ou définit la valeur par défaut de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualStringArray.SpecialValue">
            <summary>
            Obtient ou définit la valeur spéciale à afficher différement des autres valeurs.
            </summary>
        </member>
        <member name="T:VisualArrays.Properties.Resources">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:VisualArrays.Properties.Resources.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:VisualArrays.Properties.Resources.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualDecimalArray">
            <summary>
            Représente une grille permettant l'affichage de nombres  
            </summary>
        </member>
        <member name="F:VisualArrays.VisualDecimalArray.va_tabValues">
            <summary>
            Tableau à 2 dimensions des cellules de la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.#ctor">
            <summary>
            Initialise une nouvelle instance de la grille de digits avec les valeurs par défaut.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque le MouseWheel change de valeur
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.ResizeArrays">
            <summary>
            Modifie le nombre de cellules dans le tableau à partir des propriétés RowCount et ColumnCount.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.ResetAllValuesToDefault">
            <summary>
            Initialiser tous les digits du tableau à 0.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.DrawCellContent(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine la cellule à l'adresse pRow et pColumn.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Accepte les touches 0 à 9 pour la saisie de nombres.
            </summary>
            <param name="e">infos sur la touche pressée</param>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.OnMouseEnter(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.OnMouseLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.Clear(System.Int32)">
            <summary>
            Vide le contenu de la cellule dont l'index est fournit en paramètre.
            </summary>
            <param name="pIndex">index de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.Clear(System.Int32,System.Int32)">
            <summary>
            Vide le contenu de la cellule dont la rangée et la colonne sont spécifiées.
            </summary>
            <param name="pRow">rangée de la cellule à vider</param>
            <param name="pColumn">colonne de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.RandomValue">
            <summary>
            Fournit un nombre aléatoire entier, choisi entre les valeurs des propriétés 'Minimum' et 'Maximum' 
            inclusivement.
            </summary>
            <returns>Un nombre aléatoire entier entre 'Minimum' et 'Maximum' inclusivement</returns>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.AcceptBeforeValueChanged(System.Decimal)">
            <summary>
            Lance l'événement BeforeValueChanged et récolte un booléen permettant d'annuler la modification
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.GetEnumerator">
            <summary>
            Permet de parcourir séquentiellement toutes les cellules de la grille.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.ToArray">
            <summary>
                Copie les valeurs du VisualDecimalArray vers un nouveau tableau à une dimension.
            </summary>
            <returns>Tableau à une dimension contenant les copies des valeurs du VisualDecimalArray</returns>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.To2DArray">
            <summary>
                Copie les valeurs du VisualDecimalArray vers un nouveau tableau à 2 dimensions.
            </summary>
            <returns>Tableau à 2 dimensions contenant les copies des valeurs du VisualDecimalArray</returns>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.ToString">
            <summary>
            Fournit les valeurs de la grille sous la forme d'une chaîne avec les indices soit en 1D ou 2D
            selon la valeur de la propriété AddressView.
            </summary>
            <returns>Liste des valeurs de la grille</returns>
        </member>
        <member name="F:VisualArrays.VisualDecimalArray.components">
            <summary> 
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.Dispose(System.Boolean)">
            <summary> 
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.InitializeComponent">
            <summary> 
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.SelectedValue">
            <summary>
            Obtient la valeur de la cellule sélectionnée
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.View">
            <summary>
            Obtient et définit le style de visualisation pour les valeurs de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.Minimum">
            <summary>
            Obtient et définit la valeur minimale pour toutes les cellules de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.Maximum">
            <summary>
            Obtient ou définit la valeur maximale pour toutes les cellules de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.ValueFormat">
            <summary>
            Obtient et définit le format d'affichage des valeurs dans la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.DecimalPlaces">
            <summary>
            Obtient ou définit le nombre de décimales à afficher.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.Item(System.Int32)">
            <summary>
            Obtient ou définit le nombre à l'index spécifié en tenant compte du ModeAdressage.
            </summary>
            <param name="pIndex">index du digit</param>
            <returns>nombre à l'index spécifié</returns>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.Item(System.Int32,System.Int32)">
            <summary>
            Obtient ou définit le nombre à la cellule dont la ligne et la colonne 
            sont spécifiées en tenant compte du mode d'adressage.
            </summary>
            <param name="pRow">rangée de la cellule à traiter</param>
            <param name="pColumn">colonne de la cellule à traiter</param>
            <returns>nombre à la coordonnée spécifié</returns>
        </member>
        <member name="E:VisualArrays.VisualDecimalArray.BeforeValueChanged">
            <summary>
            Se produit juste avant le changement de valeur d'une cellule.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.DefaultValue">
            <summary>
            Obtient ou définit la valeur par défaut de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.SpecialValue">
            <summary>
            Obtient ou définit la valeur spéciale à afficher différement des autres valeurs.
            </summary>
        </member>
        <member name="T:VisualArrays.BorderElement">
            <summary>
            Représente un forme apparaissant sur une cellule d'une grille.
            </summary>
        </member>
        <member name="M:VisualArrays.BorderElement.#ctor">
            <summary>
            Initialise un élément visuel de type bordure.
            </summary>
        </member>
        <member name="M:VisualArrays.BorderElement.#ctor(System.Windows.Forms.Padding,System.Drawing.Color)">
            <summary>
            Initialise un élément visuel de type bordure.
            </summary>
            <param name="pBorder">Taille des bordures</param>
            <param name="pColor">Couleur des bordures</param>
        </member>
        <member name="M:VisualArrays.BorderElement.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Padding,System.Drawing.Color)">
            <summary>
            Dessine l'élément visuel
            </summary>
            <param name="pGraphics"></param>
            <param name="pBounds">Coutour utilisé pour la bordure</param>
            <param name="pBorder">Taille de chacune des bordures</param>
            <param name="pColor">Couleur de toutes les bordures</param>
        </member>
        <member name="M:VisualArrays.BorderElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Dessine l'élément visuel avec les bordures courantes.
            </summary>
            <param name="pGraphics"></param>
            <param name="pBounds"></param>
        </member>
        <member name="P:VisualArrays.BorderElement.Color">
            <summary>
            Obtient ou définit la couleur de la forme.
            </summary>
        </member>
        <member name="P:VisualArrays.BorderElement.Border">
            <summary>
            Obtient ou définit la taille des bordures.
            </summary>
        </member>
        <member name="T:VisualArrays.AppearanceConverter">
            <summary>
            Permet la convertion des éléments de la classe CellsAppearance
            </summary>
        </member>
        <member name="T:VisualArrays.VisualCharArray">
            <summary>
            Représente une grille dont les cellules sont caractères.  
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCharArray.va_tabValues">
            <summary>
            Tableau à 2 dimensions des cellules de la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCharArray.#ctor">
            <summary>
            Instancie une grille visuelle de caractères.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCharArray.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque le MouseWheel change de valeur
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualCharArray.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Accepte tous les caractères saisies au clavier
            </summary>
            <param name="e">infos sur la touche pressée</param>
        </member>
        <member name="M:VisualArrays.VisualCharArray.ResizeArrays">
            <summary>
            Modifie le nombre de cellules dans le tableau à partir des propriétés RowCount et ColumnCount.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCharArray.ResetAllValuesToDefault">
            <summary>
            Initialise toutes les cellules au caractère 0
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCharArray.DrawCellContent(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine la cellule à l'adresse pRow et pColumn.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
        </member>
        <member name="M:VisualArrays.VisualCharArray.Clear(System.Int32)">
            <summary>
            Vide le contenu de la cellule dont l'index est fournit en paramètre.
            </summary>
            <param name="pIndex">index de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualCharArray.Clear(System.Int32,System.Int32)">
            <summary>
            Vide le contenu de la cellule dont la rangée et la colonne sont spécifiées.
            </summary>
            <param name="pRow">rangée de la cellule à vider</param>
            <param name="pColumn">colonne de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualCharArray.RandomChar(System.Char,System.Char)">
            <summary>
            Génère un nombre caractère aléatoire compris entre pMinChar et pMaxChar.
            </summary>
            <returns>Un caractère aléatoire entre pMin et pMax inclusivement</returns>
        </member>
        <member name="M:VisualArrays.VisualCharArray.GetEnumerator">
            <summary>
            Permet de parcourir séquentiellement toutes les cellules de la grille.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualCharArray.AcceptBeforeValueChanged(System.Char)">
            <summary>
            Lance l'événement BeforeValueChanged et récolte un booléen permettant d'annuler la modification
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualCharArray.ToArray">
            <summary>
                Copie les valeurs du VisualCharArray vers un nouveau tableau à une dimension.
            </summary>
            <returns>Tableau à une dimension contenant les copies des valeurs du VisualCharArray</returns>
        </member>
        <member name="M:VisualArrays.VisualCharArray.To2DArray">
            <summary>
                Copie les valeurs du VisualCharArray vers un nouveau tableau à 2 dimensions.
            </summary>
            <returns>Tableau à 2 dimensions contenant les copies des valeurs du VisualCharArray</returns>
        </member>
        <member name="M:VisualArrays.VisualCharArray.ToString">
            <summary>
            Fournit les valeurs de la grille sous la forme d'une chaîne avec les indices soit en 1D ou 2D
            selon la valeur de la propriété AddressView.
            </summary>
            <returns>Liste des valeurs de la grille</returns>
        </member>
        <member name="F:VisualArrays.VisualCharArray.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCharArray.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualCharArray.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCharArray.SelectedValue">
            <summary>
            Obtient la valeur de la cellule sélectionnée
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCharArray.View">
            <summary>
            Obtient et définit le style de visualisation pour les valeurs de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCharArray.ImlBaseChar">
            <summary>
            Obtient ou définit le caractère de base pour l'indéxation des images en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCharArray.AutoNextIndex">
            <summary>
            Obtient ou définit si la saisie d'un caractère nous augmente la SelectedIndex
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCharArray.Item(System.Int32)">
            <summary>
            Obtient ou définit la valeur à l'index spécifié en tenant compte du ModeAdressage.
            </summary>
            <param name="pIndex">index du digit</param>
            <returns>valeur à l'index</returns>
        </member>
        <member name="P:VisualArrays.VisualCharArray.Item(System.Int32,System.Int32)">
            <summary>
            Obtient ou définit la valeur d'une cellule en tenant compte du mode d'adressage.
            </summary>
            <param name="pRow">La rangée de la cellule. </param>
            <param name="pColumn">La colonne de la cellule.</param>
            <returns>Le valeur à la coordonnée spécifiée.</returns>
        </member>
        <member name="E:VisualArrays.VisualCharArray.BeforeValueChanged">
            <summary>
            Se produit juste avant le changement de valeur d'une cellule.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.VisualCharArray.DefaultValue">
            <summary>
            Obtient ou définit la valeur par défaut de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCharArray.SpecialValue">
            <summary>
            Obtient ou définit la valeur spéciale à afficher différement des autres valeurs.
            </summary>
        </member>
        <member name="T:VisualArrays.TextSprite">
            <summary>
            Un 'Sprite' utilisant une chaîne pour s'afficher
            </summary>
        </member>
        <member name="M:VisualArrays.TextSprite.#ctor">
            <summary>
            Initialise un 'TextSprite'
            </summary>
        </member>
        <member name="M:VisualArrays.TextSprite.Draw(System.Drawing.Graphics)">
            <summary>
            Dessine le fond ainsi que le texte du 'Sprite'
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="P:VisualArrays.TextSprite.Text">
            <summary>
            Obtient ou définit le texte du 'Sprite'.
            </summary>
        </member>
        <member name="P:VisualArrays.TextSprite.Color">
            <summary>
            Obtient ou définit la couleur du texte du 'Sprite'
            </summary>
        </member>
        <member name="P:VisualArrays.TextSprite.Font">
            <summary>
            Obtient ou définit la police utilisée par l'élément. 
            </summary>
        </member>
        <member name="T:VisualArrays.PlatformInvokeGDI32">
            <summary>
            This class shall keep the GDI32 APIs used in our program.
            </summary>
        </member>
        <member name="F:VisualArrays.PlatformInvokeGDI32.SRCCOPY">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.PlatformInvokeGDI32.DeleteDC(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hDc"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeGDI32.DeleteObject(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hDc"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeGDI32.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hdcDest"></param>
            <param name="xDest"></param>
            <param name="yDest"></param>
            <param name="wDest"></param>
            <param name="hDest"></param>
            <param name="hdcSource"></param>
            <param name="xSrc"></param>
            <param name="ySrc"></param>
            <param name="RasterOp"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeGDI32.CreateCompatibleBitmap(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="nWidth"></param>
            <param name="nHeight"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeGDI32.CreateCompatibleDC(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeGDI32.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="bmp"></param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.PlatformInvokeUSER32">
            <summary>
            This class shall keep the User32 APIs used in our program.
            </summary>
        </member>
        <member name="F:VisualArrays.PlatformInvokeUSER32.SM_CXSCREEN">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.PlatformInvokeUSER32.SM_CYSCREEN">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.PlatformInvokeUSER32.GetDesktopWindow">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeUSER32.GetDC(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeUSER32.GetSystemMetrics(System.Int32)">
            <summary>
            
            </summary>
            <param name="abc"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeUSER32.GetWindowDC(System.Int32)">
            <summary>
            
            </summary>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeUSER32.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="hDc"></param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.CaptureScreen">
            <summary>
            This class shall keep all the functionality for capturing the desktop.
            </summary>
        </member>
        <member name="M:VisualArrays.CaptureScreen.GetDesktopImage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.SIZE">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.SIZE.cx">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.SIZE.cy">
            <summary>
            
            </summary>
        </member>
        <member name="T:VisualArrays.Address">
            <summary>
            Représente l'adresse d'une cellule dans une grille sous la forme rangée et colonne.
            </summary>
        </member>
        <member name="F:VisualArrays.Address.Empty">
            <summary>
                Représente une adresse où la valeur int.MinValue est affectée aux propriétés
                Address.Row et Address.Column. 
            </summary>
        </member>
        <member name="M:VisualArrays.Address.op_Inequality(VisualArrays.Address,VisualArrays.Address)">
            <summary>
            Compare deux Adresses. Le résultat spécifie si les valeurs des propriétés 
            Address.Row ou Address.Column des deux adresses sont différentes.
            </summary>
            <param name="left">Adresse à comparer</param>
            <param name="right">Adresse à comparer</param>
            <returns>Si les deux adresses sont différentes</returns>
        </member>
        <member name="M:VisualArrays.Address.op_Equality(VisualArrays.Address,VisualArrays.Address)">
            <summary>
            Compare deux Adresses. Le résultat spécifie si les valeurs des propriétés 
            Address.Row et Address.Column des deux adresses sont égales.
            </summary>
            <param name="left">Adresse à comparer</param>
            <param name="right">Adresse à comparer</param>
            <returns>Si les deux adresses sont identiques</returns>
        </member>
        <member name="M:VisualArrays.Address.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialise l'adresse.
            </summary>
            <param name="pRow">La rangée.</param>
            <param name="pColumn">La colonne.</param>
        </member>
        <member name="M:VisualArrays.Address.Offset(System.Int32,System.Int32)">
            <summary>
            Applique un déplacement à l'adresse selon les valeurs spécifiées
            </summary>
            <param name="pRow">Valeur de l'offset de la rangée</param>
            <param name="pColumn">Valeur de l'offset de la colonne</param>
        </member>
        <member name="M:VisualArrays.Address.ToString">
            <summary>
            Retourne un String qui représente cette adresse
            </summary>
            <returns>Rangée et colonne sous la forme (Row,Column)</returns>
        </member>
        <member name="M:VisualArrays.Address.Equals(System.Object)">
            <summary>
             Spécifie si cette Address contient la même rangée et colonne que le System.Object spécifié.
            </summary>
            <param name="obj">System.Object à tester.</param>
            <returns>true si obj possède la même rangée et colonne que cette Address</returns>
        </member>
        <member name="M:VisualArrays.Address.GetHashCode">
            <summary>
            Retourne un code de hachage pour cette Address
            </summary>
            <returns>Valeur entière qui spécifie une valeur de hachage pour cette Address</returns>
        </member>
        <member name="P:VisualArrays.Address.Row">
            <summary>
            Obtient ou définit la valeur pour la rangée.
            </summary>
        </member>
        <member name="P:VisualArrays.Address.Column">
            <summary>
            Obtient ou définit la valeur pour la colonne.
            </summary>
        </member>
        <member name="T:VisualArrays.AddressConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.AddressConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.AddressConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.AddressConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.AddressConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.AddressConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.AddressConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.ShapeElement">
            <summary>
            Représente un forme apparaissant sur une cellule d'une grille.
            </summary>
        </member>
        <member name="M:VisualArrays.ShapeElement.#ctor(VisualArrays.enuShape)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Une forme.</param>
        </member>
        <member name="M:VisualArrays.ShapeElement.#ctor(VisualArrays.enuShape,System.Int32)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Une forme.</param>
            <param name="pPenWidth">Taille du crayon qui dessine la forme.</param>
        </member>
        <member name="M:VisualArrays.ShapeElement.#ctor(VisualArrays.enuShape,System.Int32,System.Int32)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Une forme.</param>
            <param name="pPenWidth">Taille du crayon qui dessine la forme.</param>
            <param name="pRadius">Radius utilisé lorsque la forme est RoundRect.</param>
        </member>
        <member name="M:VisualArrays.ShapeElement.#ctor(VisualArrays.enuShape,System.Drawing.ContentAlignment)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Une forme.</param>
            <param name="pAlignment">Un alignement.</param>
        </member>
        <member name="M:VisualArrays.ShapeElement.#ctor(VisualArrays.enuShape,System.Int32,System.Drawing.Color,System.Int32)">
            <summary>
            Initialise un élément visuel d'une certaine forme et couleur.
            </summary>
            <param name="pShape">Une forme.</param>
            <param name="pPenWidth">Taille du crayon qui dessine la forme.</param>
            <param name="pColor">Couleur du crayon qui dessine la forme.</param>
            <param name="pRadius">Radius utilisé lorsque la forme est RoundRect.</param>
        </member>
        <member name="M:VisualArrays.ShapeElement.#ctor(VisualArrays.enuShape,System.Int32,System.Drawing.Color,System.Int32,System.Drawing.ContentAlignment)">
            <summary>
            Initialise un élément visuel d'une certaine forme et couleur.
            </summary>
            <param name="pShape">Une forme.</param>
            <param name="pPenWidth">Taille du crayon qui dessine la forme.</param>
            <param name="pColor">Couleur du crayon qui dessine la forme.</param>
            <param name="pZoom">Facteur d'aggrandissement de la forme en poucentage.</param>
            <param name="pAlignment">Un alignement.</param>
        </member>
        <member name="M:VisualArrays.ShapeElement.DrawShape(VisualArrays.enuShape,System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Int32)">
            <summary>
            
            </summary>
            <param name="pShape"></param>
            <param name="pGraphics"></param>
            <param name="pBounds"></param>
            <param name="pPen"></param>
            <param name="pRadius"></param>
        </member>
        <member name="M:VisualArrays.ShapeElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Dessine l'élément visuel selon la forme courante.
            </summary>
            <param name="pGraphics"></param>
            <param name="pBounds"></param>
        </member>
        <member name="P:VisualArrays.ShapeElement.Radius">
            <summary>
            Obtient ou définit le radius utilisé lorsque la forme est RoundRect.
            </summary>
        </member>
        <member name="P:VisualArrays.ShapeElement.Color">
            <summary>
            Obtient ou définit la couleur de la forme.
            </summary>
        </member>
        <member name="P:VisualArrays.ShapeElement.Shape">
            <summary>
            Obtient ou définit la forme de l'élément.
            </summary>
        </member>
        <member name="P:VisualArrays.ShapeElement.PenWidth">
            <summary>
            Obtient ou définit la taille du crayon qui dessine la forme.
            </summary>
        </member>
        <member name="T:VisualArrays.RowHeaderAppearance">
            <summary>
            Fournit les informations concernant l'apparence de l'en-tête des rangées
            </summary>
        </member>
        <member name="M:VisualArrays.RowHeaderAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un RowHeaderAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.Font">
            <summary>
            Obtient ou définit la police pour l'en-tête des rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.ForeColor">
            <summary>
            Obtient ou définit la couleur du texte pour l'en-tête des rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.BackgroundColor">
            <summary>
            Obtient ou définit la couleur de fond des cellules d'en-tête de rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.Style">
            <summary>
            Obtient ou définit le style de fond des cellules d'en-tête de rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.Width">
            <summary>
            Obtient ou définit la largeur de l'en-tête des rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.ValueStyle">
            <summary>
            Obtient ou définit le style du contenu de l'en-tête des rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.Visible">
            <summary>
            Indique si l'en-tête est visible ou non
            </summary>
        </member>
        <member name="T:VisualArrays.SpriteCollectionEditor">
            <summary>
            Représente un éditeur de collection de 'Sprite'
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.CanSelectMultipleInstances">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.CanRemoveInstance(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.CreateCollectionItemType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.CreateNewItemTypes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.CreateInstance(System.Type)">
            <summary>
            
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.CreateCollectionForm">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.SpriteCollection">
            <summary>
            Représente une collection d'objets 'Sprite' qui s'affiche sur une grille.
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteCollection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteCollection.#ctor(VisualArrays.BaseGrid)">
            <summary>
            
            </summary>
            <param name="pOwner"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.Remove(VisualArrays.Sprite)">
            <summary>
            
            </summary>
            <param name="pSprite"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.Contains(VisualArrays.Sprite)">
            <summary>
            
            </summary>
            <param name="pSprite"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollection.AddRange(VisualArrays.Sprite[])">
            <summary>
            
            </summary>
            <param name="pSprites"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.GetValues">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.BringToFront(VisualArrays.Sprite)">
            <summary>
            Place le 'Sprite' à l'avant plan devant tous les autres Sprites
            </summary>
            <param name="pSprite">Sprite à déplacer à l'avant plan</param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.SendToBack(VisualArrays.Sprite)">
            <summary>
            Place le 'Sprite' au dernier plan derrière tous les autres Sprites
            </summary>
            <param name="pSprite">Sprite à déplacer à l'arrière plan</param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.IndexOf(VisualArrays.Sprite)">
             <summary>
                 Recherche le Sprite spécifié et retourne l'index de base zéro de la première
                 occurrence dans la collection.
             </summary>
             <param name="pSprite">Sprite à localiser dans la collection</param>
             <returns>
                 Index de base zéro de la première occurrence de item dans la collection, s'il existe , sinon -1.
            </returns>
        </member>
        <member name="P:VisualArrays.SpriteCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="pIndex"></param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.SpecialValueAppearance">
            <summary>
            Fournit les informations concernant l'apparence de la valeur spéciale de la grille
            </summary>
        </member>
        <member name="F:VisualArrays.SpecialValueAppearance.m_owner">
            <summary>
            VisualArray qui possède cette instance
            </summary>
        </member>
        <member name="M:VisualArrays.SpecialValueAppearance.#ctor(VisualArrays.ValueGrid)">
            <summary>
            Initialise un SpecialValueAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire</param>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance.TextColor">
            <summary>
            Obtient et définit la couleur du texte de la valeur spéciale.
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance.Font">
            <summary>
            Obtient ou définit la police utilisée pour afficher la valeur spéciale.
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance.Show">
            <summary>
            Indique si le texte de la valeur spéciale doit être affiché
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance.Border">
            <summary>
            Obtient et définit la taille des bordures pour la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance.BackgroundColor">
            <summary>
            Obtient et définit la couleur de la forme ou de la bordure sous la valeur spéciale.
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance.Image">
            <summary>
            Obtient ou définit l'image affichée derrière la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance.Shape">
            <summary>
            Obtient ou définit la forme dessinée derrière la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance.PenWidth">
            <summary>
            Obtient ou définit la taille du crayon utilisé pour dessiner la forme derrière la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance.Style">
            <summary>
            Obtient et définit le style de fond des cellules contenant void.
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.FillShapeElement">
            <summary>
            Représente un forme apparaissant sur une cellule d'une grille.
            </summary>
        </member>
        <member name="F:VisualArrays.FillShapeElement.va_radius">
            <summary>
            Obtient ou définit radius utilisé lorsque la forme est RoundRect.
            </summary>
        </member>
        <member name="M:VisualArrays.FillShapeElement.#ctor(VisualArrays.enuShape)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Forme de l'élément</param>
        </member>
        <member name="M:VisualArrays.FillShapeElement.#ctor(VisualArrays.enuShape,System.Drawing.Color)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Forme de l'élément</param>
            <param name="pColor">Couleur de la forme</param>
        </member>
        <member name="M:VisualArrays.FillShapeElement.#ctor(VisualArrays.enuShape,System.Drawing.Color,System.Int32)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Forme de l'élément</param>
            <param name="pColor">Couleur de la forme</param>
            <param name="pRadius">Radius utilisé lorsque la forme est RoundRect</param>
        </member>
        <member name="M:VisualArrays.FillShapeElement.#ctor(VisualArrays.enuShape,System.Drawing.Color,System.Int32,System.Drawing.ContentAlignment)">
            <summary>
            Initialise un élément visuel d'une certaine forme et couleur
            </summary>
            <param name="pShape">Forme de l'élément</param>
            <param name="pColor">Couleur de la forme</param>
            <param name="pZoom">Facteur d'aggrandissement de la forme</param>
            <param name="pAlignment">Alignement de la forme</param>
        </member>
        <member name="M:VisualArrays.FillShapeElement.DrawFillShape(VisualArrays.enuShape,System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32)">
            <summary>
            </summary>
            <param name="pShape"></param>
            <param name="pGraphics"></param>
            <param name="pBounds"></param>
            <param name="pColor"></param>
            <param name="pRadius"></param>
        </member>
        <member name="M:VisualArrays.FillShapeElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Dessine une forme pleine
            </summary>
            <param name="pGraphics"></param>
            <param name="pBounds"></param>
        </member>
        <member name="P:VisualArrays.FillShapeElement.Color">
            <summary>
            Obtient ou définit la couleur de la forme
            </summary>
        </member>
        <member name="P:VisualArrays.FillShapeElement.Shape">
            <summary>
            Obtient ou définit la forme de l'élément
            </summary>
        </member>
        <member name="P:VisualArrays.FillShapeElement.Radius">
            <summary>
            Obtient ou définit radius utilisé lorsque la forme est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.FillShapeSprite">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.FillShapeSprite.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.FillShapeSprite.Draw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="P:VisualArrays.FillShapeSprite.Color">
            <summary>
            Obtient ou définit la couleur de la forme
            </summary>
        </member>
        <member name="P:VisualArrays.FillShapeSprite.Shape">
            <summary>
            Obtient ou définit la forme de l'élément
            </summary>
        </member>
        <member name="T:VisualArrays.VoidDataConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.VoidDataConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VoidDataConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VoidDataConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VoidDataConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VoidDataConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VoidDataConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.VoidData">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.VoidData.#ctor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="pX"></param>
            <param name="pY"></param>
            <param name="pColor"></param>
        </member>
        <member name="M:VisualArrays.VoidData.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:VisualArrays.VoidData.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.VoidData.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.VoidData.Color">
            <summary>
            
            </summary>
        </member>
        <member name="T:VisualArrays.SelectionAppearance">
            <summary>
            Fournit les informations concernant l'apparence de la sélection
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.Padding">
            <summary>
            Obtient et définit l'espacement entre la cellule et la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.Image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.Style">
            <summary>
            Obtient ou définit le style de fond de la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.Shape">
            <summary>
            Obtient ou définit la forme utilisée pour représenter la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.PenWidth">
            <summary>
            Obtient ou définit l'épaisseur du crayon utilisé pour dessiner la forme de la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.Color">
            <summary>
            Obtient ou définit la couleur de la forme de la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.VBASpecialValueAppearance">
            <summary>
            Fournit les informations concernant l'apparence de la valeur spéciale de la grille
            </summary>
        </member>
        <member name="F:VisualArrays.VBASpecialValueAppearance.m_owner">
            <summary>
            VisualArray qui possède cette instance
            </summary>
        </member>
        <member name="M:VisualArrays.VBASpecialValueAppearance.#ctor(VisualArrays.ValueGrid)">
            <summary>
            Initialise un SpecialValueAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire</param>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance.Border">
            <summary>
            Obtient et définit la taille des bordures pour la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance.BackgroundColor">
            <summary>
            Obtient et définit la couleur de la forme ou de la bordure sous la valeur spéciale.
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance.Image">
            <summary>
            Obtient ou définit l'image affichée derrière la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance.Shape">
            <summary>
            Obtient ou définit la forme dessinée derrière la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance.PenWidth">
            <summary>
            Obtient ou définit la taille du crayon utilisé pour dessiner la forme derrière la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance.Style">
            <summary>
            Obtient et définit le style de fond des cellules contenant void.
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.ColumnHeaderAppearance">
            <summary>
            Fournit les informations concernant l'apparence de l'en-tête des colonnes
            </summary>
        </member>
        <member name="M:VisualArrays.ColumnHeaderAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un ColumnHeaderAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.Font">
            <summary>
            Obtient ou définit la police pour l'en-tête des colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.ForeColor">
            <summary>
            Obtient ou définit la couleur du texte pour l'en-tête des colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.BackgroundColor">
            <summary>
            Obtient ou définit la couleur de fond des cellules d'en-tête de colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.Style">
            <summary>
            Obtient ou définit le style de fond des cellules d'en-tête de colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.Height">
            <summary>
            Obtient ou définit la hauteur de l'en-tête des colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.ValueStyle">
            <summary>
            Obtient ou définit le style du contenu de l'en-tête des colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.Visible">
            <summary>
            Indique si l'en-tête est visible ou non
            </summary>
        </member>
        <member name="T:VisualArrays.GraphAppearance">
            <summary>
            Fournit les informations concernant l'apparence en mode graphique
            </summary>
        </member>
        <member name="M:VisualArrays.GraphAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un GraphAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarValueColor">
            <summary>
            Obtient ou définit la couleur utilisée pour la valeur de la barre du graphique
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarValueFont">
            <summary>
            Obtient ou définit la police utilisée pour la valeur de la barre du graphique
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarValueStyle">
            <summary>
            Obtient ou définit le style de la valeur affichée avec la barre.
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarMargin">
            <summary>
            Obtient ou définit la marge autour de l'élément visuel.
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarStyle">
            <summary>
            Obtient et définit le style des barres du graphique.
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarColor">
            <summary>
            Obtient et définit la couleur des barres du graphique
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarImage">
            <summary>
            Obtient ou définit l'image utilisée pour dessiner les barres du graphique.
            </summary>
        </member>
        <member name="T:VisualArrays.VBACellAppearance">
            <summary>
            Fournit les informations concernant l'apparence des cellules dont l'état Enabled est true
            </summary>
        </member>
        <member name="F:VisualArrays.VBACellAppearance.m_owner">
            <summary>
            Initialise un BackgroundAppearance object
            </summary>
        </member>
        <member name="M:VisualArrays.VBACellAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un VBACellAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="F:VisualArrays.VBACellAppearance.m_image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.Shape">
            <summary>
            Obtient et définit la forme utilisée pour dessiner le fond de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.Image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.PenWidth">
            <summary>
            Obtient et définit la taille du crayon pour dessiner une forme contour.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.Style">
            <summary>
            Obtient et définit le style de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.Border">
            <summary>
            Obtient et définit la taille des bordures autour des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.BackgroundColor">
            <summary>
            Obtient et définit la couleur de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.TextElement">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.TextElement.#ctor(System.Drawing.Font,System.String)">
            <summary>
            Initialise un élément affichant du texte.
            </summary>
            <param name="pFont">Une police.</param>
            <param name="pText">Le texte.</param>
        </member>
        <member name="M:VisualArrays.TextElement.#ctor(System.Drawing.Font,System.String,System.Drawing.Color)">
            <summary>
            Initialise un élément affichant du texte.
            </summary>
            <param name="pFont">Police utilsée pour dessiner le texte</param>
            <param name="pText">Texte à afficher</param>
            <param name="pColor">Couleur du texte</param>
        </member>
        <member name="M:VisualArrays.TextElement.#ctor(System.Drawing.Font,System.String,System.Drawing.Color,System.Drawing.ContentAlignment,System.Windows.Forms.Padding)">
            <summary>
            Initialise un élément affichant du texte.
            </summary>
            <param name="pFont">Une police.</param>
            <param name="pText">Le texte.</param>
            <param name="pColor">Une couleur.</param>
            <param name="pAlignment">Un alignement.</param>
            <param name="pMargin">Marge autour du texte</param>
        </member>
        <member name="M:VisualArrays.TextElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            -------------------------------------------------------------------------------------
             <summary>
             Dessine le texte de l'élément.
             </summary>
             <param name="pGraphics">Graphique dans lequel le texte est dessiné.</param>
             <param name="pBounds">Rectangle dans lequel le texte doit être dessiné</param>
        </member>
        <member name="M:VisualArrays.TextElement.ToString">
            <summary>
            Fournit le texte de l'élément
            </summary>
            <returns></returns>
        </member>
        <member name="P:VisualArrays.TextElement.Text">
            <summary>
            Obtient ou définit le texte d'un élément.
            </summary>
        </member>
        <member name="P:VisualArrays.TextElement.Color">
            <summary>
            Obtient ou définit la couleur du texte à afficher.
            </summary>
        </member>
        <member name="P:VisualArrays.TextElement.Font">
            <summary>
            Obtient ou définit la police utilisée par l'élément. 
            </summary>
        </member>
        <member name="T:VisualArrays.HeaderArray">
            <summary>
            Représente un tableau de chaînes affichant les en-têtes d'une grille.
            </summary>
        </member>
        <member name="M:VisualArrays.HeaderArray.GetEnumerator">
            <summary>
            Supporte une simple itération sur le tableau en-têtes.
            </summary>
            <returns>Un objet de type 'Sprite'.</returns>
        </member>
        <member name="M:VisualArrays.HeaderArray.#ctor(VisualArrays.BaseGrid,System.Int32,System.Boolean)">
            <summary>
            Initialise une collection d'objets 'Sprite'.
            </summary>
            <param name="pOwner">Propriétaire du tableau des en-têtes.</param>
            <param name="pSize">Taille du tableau.</param>
            <param name="pColumn">Une en-tête de colonne ou non.</param>
        </member>
        <member name="P:VisualArrays.HeaderArray.Length">
            <summary>
            Fournit la taille du tableau des en-têtes.
            </summary>
        </member>
        <member name="P:VisualArrays.HeaderArray.Item(System.Int32)">
            <summary>
            Obtient ou définit le texte à l'index spécifié dans le tableau des en-têtes.
            </summary>
            <param name="pIndex"></param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.ICellDraw">
            <summary>
                Prend en charge le dessin du contenu d'une cellule.
            </summary>
        </member>
        <member name="M:VisualArrays.ICellDraw.DrawCellContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Dessine le contenu d'une cellule.
            </summary>
            <param name="pGraphics">objet graphique où dessiner</param>
            <param name="pCellContentBounds">Contour de la zone de contenu de la cellule</param>
            <param name="pCellBounds">Contour complet de la cellule</param>
            <param name="pEnabled">État de la cellule à dessiner</param>
        </member>
        <member name="T:VisualArrays.Cell">
            <summary>
            Représente une cellule d'une VisualArrays
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.Layer">
            <summary>
            Obtient ou définit le premier élément visuel sur la cellule
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.Background">
            <summary>
            Obtient ou définit le VisualElement utilisé pour dessiner le fond de la cellule
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.ReadOnly">
            <summary>
            Obtient ou définit si la valeur de la cellule peut être modifiée ou non 
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.Selected">
            <summary>
            Obtient ou définit si la cellule est sélectionée ou non 
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.Enabled">
            <summary>
            Obtient ou définit si la cellule est active ou non 
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.Visible">
            <summary>
            Obtient ou définit si la cellule est visible ou non
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.UserContent">
            <summary>
            Obtient ou définit des données utilisateur pour le contenu et l'affichage d'une cellule
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.UserData">
            <summary>
            Obtient ou définit des données utilisateur supplémentaire à associer avec la cellule
            </summary>
        </member>
        <member name="M:VisualArrays.Cell.Reset">
            <summary>
            Remet la cellule dans son état initial
            </summary>
        </member>
        <member name="T:VisualArrays.GridAppearance">
            <summary>
            Fournit les informations concernant l'apparence du quadrillage de la grille
            </summary>
        </member>
        <member name="M:VisualArrays.GridAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un GridAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du GridAppearance</param>
        </member>
        <member name="P:VisualArrays.GridAppearance.Color">
            <summary>
            Obtient ou définit la couleur du quadrillage de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.GridAppearance.Margin">
            <summary>
            Obtient ou définit la taille de l'espacement autour de la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.GridAppearance.LineSize">
            <summary>
            Obtient ou définit l'épaisseur des lignes du quadrillage de la grille.
            </summary>
        </member>
        <member name="T:VisualArrays.enuDirection">
            <summary>
            Quatre directions dans un déplacement en 2 dimensions.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDirection.Left">
            <summary>
            Vers la gauche.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDirection.Top">
            <summary>
            Vers le haut.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDirection.Right">
            <summary>
            Vers la droite.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDirection.Bottom">
            <summary>
            Vers le bas.
            </summary>
        </member>
        <member name="T:VisualArrays.enuCharView">
            <summary>
            Les styles de visualisation pour la VisualCharArray.
            </summary>
        </member>
        <member name="F:VisualArrays.enuCharView.Char">
            <summary>
            Style caractère.
            </summary>
        </member>
        <member name="F:VisualArrays.enuCharView.Code">
            <summary>
            Style code.
            </summary>
        </member>
        <member name="F:VisualArrays.enuCharView.ImageList">
            <summary>
            Style image.
            </summary>
        </member>
        <member name="T:VisualArrays.enuStringView">
            <summary>
            Les styles de visualisation pour la VisualStringArray.
            </summary>
        </member>
        <member name="F:VisualArrays.enuStringView.Text">
            <summary>
            Style texte.
            </summary>
        </member>
        <member name="F:VisualArrays.enuStringView.ImageFile">
            <summary>
            Style image.
            </summary>
        </member>
        <member name="T:VisualArrays.enuIntView">
            <summary>
            Les styles de visualisation pour la VisualIntArray.
            </summary>
        </member>
        <member name="F:VisualArrays.enuIntView.Number">
            <summary>
            Style nombre.
            </summary>
        </member>
        <member name="F:VisualArrays.enuIntView.Graph">
            <summary>
            Style graphique.
            </summary>
        </member>
        <member name="F:VisualArrays.enuIntView.Digit">
            <summary>
            Style digit.
            </summary>
        </member>
        <member name="F:VisualArrays.enuIntView.ImageList">
            <summary>
            Style image.
            </summary>
        </member>
        <member name="F:VisualArrays.enuIntView.GraphNumber">
            <summary>
            Style image graphique + nombre.
            </summary>
        </member>
        <member name="T:VisualArrays.enuDecimalView">
            <summary>
            Les styles de visualisation pour la VisualDecimalArray.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDecimalView.Number">
            <summary>
            Style nombre.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDecimalView.Graph">
            <summary>
            Style graphique.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDecimalView.GraphNumber">
            <summary>
            Style graphique + nombre.
            </summary>
        </member>
        <member name="T:VisualArrays.enuGraphBarStyle">
            <summary>
            Les styles de barres
            </summary>
        </member>
        <member name="F:VisualArrays.enuGraphBarStyle.Image">
            <summary>
            Utilise une image pour dessiner les barres
            </summary>
        </member>
        <member name="F:VisualArrays.enuGraphBarStyle.FillShape">
            <summary>
            Dessiner un rectagle plein
            </summary>
        </member>
        <member name="T:VisualArrays.enuGraphValueStyle">
            <summary>
            Les styles de visualisation pour la valeur du graphique.
            </summary>
        </member>
        <member name="F:VisualArrays.enuGraphValueStyle.None">
            <summary>
            Aucune valeur.
            </summary>
        </member>
        <member name="F:VisualArrays.enuGraphValueStyle.Normal">
            <summary>
            La valeur est affichée normalement.
            </summary>
        </member>
        <member name="F:VisualArrays.enuGraphValueStyle.Pourcent">
            <summary>
            La valeur est affichée avec un symbole %.
            </summary>
        </member>
        <member name="T:VisualArrays.enuBkgStyle">
            <summary>
            Les styles de fond d'une cellule.
            </summary>
        </member>
        <member name="F:VisualArrays.enuBkgStyle.None">
            <summary>
            Pas de fond, la cellule est transparente.
            </summary>
        </member>
        <member name="F:VisualArrays.enuBkgStyle.Border">
            <summary>
            Pas de fond, seulement une bordure.
            </summary>
        </member>
        <member name="F:VisualArrays.enuBkgStyle.FillShape">
            <summary>
            Le fond est dessiné par une forme pleine.
            </summary>
        </member>
        <member name="F:VisualArrays.enuBkgStyle.Shape">
            <summary>
            Le fond est dessiné par une forme contour.
            </summary>
        </member>
        <member name="F:VisualArrays.enuBkgStyle.Image">
            <summary>
            Le fond est dessiné par une image.
            </summary>
        </member>
        <member name="T:VisualArrays.enuShape">
            <summary>
            Les formes à superposer sur une cellule.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.RoundRect">
            <summary>
            Un rectangle aux coins arrondis
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.Rectangle">
            <summary>
            Un rectangle.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.Ellipse">
            <summary>
            Un ellipse.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleIsoUp">
            <summary>
            Un triangle isocèle vers le haut.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleIsoDown">
            <summary>
            Un triangle isocèle vers le bas.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleIsoRight">
            <summary>
            Un triangle isocèle vers la droite.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleIsoLeft">
            <summary>
            Un triangle isocèle vers la gauche.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleRectBL">
            <summary>
            Un triangle rectangle vers le bas gauche.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleRectBR">
            <summary>
            Un triangle rectangle vers le bas droit.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleRectTL">
            <summary>
            Un triangle rectangle vers le haut gauche.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleRectTR">
            <summary>
            Un triangle rectangle vers le haut droit.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.Losange">
            <summary>
            Un losange.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.HexagonH">
            <summary>
            Un hexagone horizontal.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.HexagonV">
            <summary>
            Un hexagone vertical.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.Parallelogram">
            <summary>
            Un parallélogramme.
            </summary>
        </member>
        <member name="T:VisualArrays.enuSelectionStyle">
            <summary>
            Les styles disponibles pour la sélection.
            </summary>
        </member>
        <member name="F:VisualArrays.enuSelectionStyle.Shape">
            <summary>
            La sélection utilise une forme.
            </summary>
        </member>
        <member name="F:VisualArrays.enuSelectionStyle.Image">
            <summary>
            Le sélection utilise une image.
            </summary>
        </member>
        <member name="T:VisualArrays.enuHeaderBkgStyle">
            <summary>
            Les styles de fond d'un en-tête.
            </summary>
        </member>
        <member name="F:VisualArrays.enuHeaderBkgStyle.None">
            <summary>
            Pas de fond de cellule, la cellule est transparente.
            </summary>
        </member>
        <member name="F:VisualArrays.enuHeaderBkgStyle.Fill">
            <summary>
            Le fond de la cellule est plein.
            </summary>
        </member>
        <member name="T:VisualArrays.enuResizeMode">
            <summary>
            Les modes de redimentionnement de la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.enuResizeMode.Normal">
            <summary>
            Horizontalement et verticalement.
            </summary>
        </member>
        <member name="F:VisualArrays.enuResizeMode.RowColumn">
            <summary>
            Par ligne et par colonne.
            </summary>
        </member>
        <member name="F:VisualArrays.enuResizeMode.Row">
            <summary>
            Par ligne verticalement.
            </summary>
        </member>
        <member name="F:VisualArrays.enuResizeMode.Column">
            <summary>
            Par colonne horizontalement.
            </summary>
        </member>
        <member name="T:VisualArrays.enuAddressMode">
            <summary>
            Les modes d'interprétation de la valeur d'un index.
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.Normal">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.Reverse">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.ReverseRow">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.ReverseColumn">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.StairsTopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.StairsTopRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.StairsBottomLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.StairsBottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="T:VisualArrays.enuAddressView">
            <summary>
            Les modes de visualisation des adresses en mode conception.
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressView.None">
            <summary>
            Aucun affichage.
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressView.Mode1D">
            <summary>
            Affichage sous forme d'index.
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressView.Mode2D">
            <summary>
            Afficahge sous forme de coordonnées.
            </summary>
        </member>
        <member name="T:VisualArrays.enuDataStyle">
            <summary>
            Les styles d'affichage des en-têtes.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDataStyle.Index">
            <summary>
            Avec un index selon la base 0.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDataStyle.IndexBase1">
            <summary>
            Avec un index selon la base 1.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDataStyle.User">
            <summary>
            Avec un texte personalisé.
            </summary>
        </member>
        <member name="T:VisualArrays.enuValueFormat">
            <summary>
            Les différents formats d'affichage d'une valeur décimale.
            </summary>
        </member>
        <member name="F:VisualArrays.enuValueFormat.Standard">
            <summary>
            Affichage standard.
            </summary>
        </member>
        <member name="F:VisualArrays.enuValueFormat.Currency">
            <summary>
            Affichage monétaire avec $
            </summary>
        </member>
        <member name="F:VisualArrays.enuValueFormat.Pourcent">
            <summary>
            Affichage en pourcentage avec %
            </summary>
        </member>
        <member name="T:VisualArrays.BeforeValueChangedArgs`1">
            <summary>
            Représente un objet événement qui se produit avant le changement du contenu d'une cellule d'une VisualArrays
            </summary>
        </member>
        <member name="F:VisualArrays.BeforeValueChangedArgs`1.AcceptValueChanged">
            <summary>
            Indique si la nouvelle valeur doit être acceptée
            </summary>
        </member>
        <member name="F:VisualArrays.BeforeValueChangedArgs`1.NewValue">
            <summary>
            Nouvelle valeur proposée
            </summary>
        </member>
        <member name="M:VisualArrays.BeforeValueChangedArgs`1.#ctor(System.Boolean,`0)">
            <param name="pAcceptValueChanged">Indique si le changement de valeur est accepté</param>
            <param name="pNewValue">Nouvelle valeur proposée</param>
        </member>
        <member name="T:VisualArrays.BeforeValueChangedArgsVBA">
            <summary>
            Représente un objet événement qui se produit avant le changement du contenu d'une cellule d'une VisualBoolArray
            </summary>
        </member>
        <member name="M:VisualArrays.BeforeValueChangedArgsVBA.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initialise un BeforeValueChangedVBA
            </summary>
            <param name="pAcceptValueChanged">Indique si le changement de valeur est accepté</param>
            <param name="pNewValue">Nouvelle valeur proposée</param>
        </member>
        <member name="T:VisualArrays.BeforeValueChangedArgsVCA">
            <summary>
            Représente un objet événement qui se produit avant le changement du contenu d'une cellule d'une VisualCharArray
            </summary>
        </member>
        <member name="M:VisualArrays.BeforeValueChangedArgsVCA.#ctor(System.Boolean,System.Char)">
            <summary>
            Initialise un BeforeValueChangedVCA
            </summary>
            <param name="pAcceptValueChanged">Indique si le changement de valeur est accepté</param>
            <param name="pNewValue">Nouvelle valeur proposée</param>
        </member>
        <member name="T:VisualArrays.BeforeValueChangedArgsVSA">
            <summary>
            Représente un objet événement qui se produit avant le changement du contenu d'une cellule d'une VisualStringArray
            </summary>
        </member>
        <member name="M:VisualArrays.BeforeValueChangedArgsVSA.#ctor(System.Boolean,System.String)">
            <summary>
            Initialise un BeforeValueChangedVSA
            </summary>
            <param name="pAcceptValueChanged">Indique si le changement de valeur est accepté</param>
            <param name="pNewValue">Nouvelle valeur proposée</param>
        </member>
        <member name="T:VisualArrays.BeforeValueChangedArgsVDA">
            <summary>
            Représente un objet événement qui se produit avant le changement du contenu d'une cellule d'une VisualDecimalArray
            </summary>
        </member>
        <member name="M:VisualArrays.BeforeValueChangedArgsVDA.#ctor(System.Boolean,System.Decimal)">
            <summary>
            Initialise un BeforeValueChangedVDA
            </summary>
            <param name="pAcceptValueChanged">Indique si le changement de valeur est accepté</param>
            <param name="pNewValue">Nouvelle valeur proposée</param>
        </member>
        <member name="T:VisualArrays.BeforeValueChangedArgsVIA">
            <summary>
            Représente un objet événement qui se produit avant le changement du contenu d'une cellule d'une VisualIntArray
            </summary>
        </member>
        <member name="M:VisualArrays.BeforeValueChangedArgsVIA.#ctor(System.Boolean,System.Int32)">
            <summary>
            Initialise un BeforeValueChangedVIA
            </summary>
            <param name="pAcceptValueChanged">Indique si le changement de valeur est accepté</param>
            <param name="pNewValue">Nouvelle valeur proposée</param>
        </member>
        <member name="T:VisualArrays.RowHeaderEventArgs">
            <summary>
            Fournit les données des événements pour les en-têtes de rangées.
            </summary>
        </member>
        <member name="F:VisualArrays.RowHeaderEventArgs.Row">
            <summary>
            Index de la rangée où se produit l'événement 
            </summary>
        </member>
        <member name="M:VisualArrays.RowHeaderEventArgs.#ctor(System.Int32)">
            <param name="pRow">rangée ou se produit l'événement</param>
        </member>
        <member name="T:VisualArrays.ColumnHeaderEventArgs">
            <summary>
            Fournit les données des événements pour les en-têtes de colonnes.
            </summary>
        </member>
        <member name="F:VisualArrays.ColumnHeaderEventArgs.Column">
            <summary>
            Index de la colonne où se produit l'événement 
            </summary>
        </member>
        <member name="M:VisualArrays.ColumnHeaderEventArgs.#ctor(System.Int32)">
            <param name="pColumn">colonne ou se produit l'événement</param>
        </member>
        <member name="T:VisualArrays.SpriteMouseEventArgs">
            <summary>
            Fournit les données des événements sur la gestion de la souris sur un Sprite
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteMouseEventArgs.Sprite">
            <summary>
            Sprite sur lequel l'événement s'est produit.
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteMouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32,VisualArrays.Sprite)">
            <summary>
             Initialise une nouvelle instance de la classe SpriteMouseEventArgs.
            <param name="pButton">Une des valeurs System.Windows.Forms.MouseButtons indiquant le bouton de la souris sur lequel l'utilisateur a appuyé.</param>
            <param name="pClicks">Le nombre de fois où l'utilisateur a cliqué sur un bouton de la souris.</param>
            <param name="pX">Coordonnée x d'un clic de la souris en pixels.</param>
            <param name="pY">Coordonnée y d'un clic de la souris en pixels.</param>
            <param name="pDelta">Décompte signé du nombre de détentes de rotation de la roulette de la souris.</param>
            <param name="pSprite">Sprite sur lequel l'événement s'est produit</param>
            </summary>
        </member>
        <member name="T:VisualArrays.CellEventArgs">
            <summary>
            Fournit les données des événements sur une cellule.
            </summary>
        </member>
        <member name="F:VisualArrays.CellEventArgs.Index">
            <summary>
            Index de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="F:VisualArrays.CellEventArgs.Row">
            <summary>
            Rangée de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="F:VisualArrays.CellEventArgs.Column">
            <summary>
            Colonne de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="M:VisualArrays.CellEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
             Initialise une nouvelle instance de la classe CellEventArgs.
            </summary>
            <param name="pIndex">Index de la cellule où se produit l'événement</param>
            <param name="pRow">Rangée de la cellule où se produit l'événement</param>
            <param name="pColumn">Colonne de la cellule où se produit l'événement</param>
        </member>
        <member name="T:VisualArrays.SpriteEventArgs">
            <summary>
            Fournit les données des événements sur un Sprite.
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteEventArgs.Sprite">
            <summary>
            Sprite sur lequel l'événement s'est produit.
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteEventArgs.#ctor(VisualArrays.Sprite)">
            <summary>
             Initialise une nouvelle instance de la classe SpriteEventArgs.
            </summary>
            <param name="pSprite">Sprite où se produit l'événement</param>
        </member>
        <member name="T:VisualArrays.CellMouseEventArgs">
            <summary>
            Fournit les données des événements sur la gestion de la souris sur une cellule
            </summary>
        </member>
        <member name="F:VisualArrays.CellMouseEventArgs.Address">
            <summary>
            Adresse de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="F:VisualArrays.CellMouseEventArgs.Index">
            <summary>
            Index de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="F:VisualArrays.CellMouseEventArgs.Row">
            <summary>
            Rangée de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="F:VisualArrays.CellMouseEventArgs.Column">
            <summary>
            Colonne de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="M:VisualArrays.CellMouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Initialise une nouvelle instance de la classe CellMouseEventArgs.
            <param name="pButton">Une des valeurs System.Windows.Forms.MouseButtons indiquant le bouton de la souris sur lequel l'utilisateur a appuyé.</param>
            <param name="pClicks">Le nombre de fois où l'utilisateur a cliqué sur un bouton de la souris.</param>
            <param name="pX">Coordonnée x d'un clic de la souris en pixels.</param>
            <param name="pY">Coordonnée y d'un clic de la souris en pixels.</param>
            <param name="pDelta">Décompte signé du nombre de détentes de rotation de la roulette de la souris.</param>
            <param name="pIndex">Index de la cellule où se produit l'événement</param>
            <param name="pRow">Rangée de la cellule où se produit l'événement</param>
            <param name="pColumn">Colonne de la cellule où se produit l'événement</param>
            </summary>
        </member>
        <member name="T:VisualArrays.VisualArraysDragEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.VisualArraysDragEventArgs.SourceGridName">
            <summary>
            Nom de la grille source de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.VisualArraysDragEventArgs.SourceIndex">
            <summary>
            Index source de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.VisualArraysDragEventArgs.SourceAddress">
            <summary>
            Adresse source de l'opération glisser-déposer
            </summary>
        </member>
        <member name="M:VisualArrays.VisualArraysDragEventArgs.#ctor(System.String,System.Int32,VisualArrays.Address)">
            <summary>
            Fournit des informations concernant l'opération glisser-déposer
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSourceIndex">Index source de l'opération glisser-déposer</param>
            <param name="pSourceAddress">Adresse source de l'opération glisser-déposer</param>
        </member>
        <member name="T:VisualArrays.CellDragEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.CellDragEventArgs.Cancel">
            <summary>
             true pour annuler l'opération sinon, false.
            </summary>
        </member>
        <member name="M:VisualArrays.CellDragEventArgs.#ctor(System.String,System.Int32,VisualArrays.Address,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSourceIndex">Index source de l'opération glisser-déposer</param>
            <param name="pSourceAddress">Adresse source de l'opération glisser-déposer</param>
            <param name="pCancel">true pour annuler l'opération, false autrement</param>
        </member>
        <member name="T:VisualArrays.SpriteDragEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragEventArgs.SourceGridName">
            <summary>
            Nom de la grille source de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragEventArgs.Sprite">
            <summary>
            Index du Sprite dans la collection des Sprites de la grille source
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragEventArgs.Cancel">
            <summary>
             true pour annuler l'opération sinon, false.
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteDragEventArgs.#ctor(System.String,VisualArrays.Sprite,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSprite">Sprite impliqué dans l'opération glisser-déposer</param>
            <param name="pCancel">true pour annuler l'opération, false autrement</param>
        </member>
        <member name="T:VisualArrays.SpriteDragAndDropEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragAndDropEventArgs.Sprite">
            <summary>
            Sprite source de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragAndDropEventArgs.DestinationIndex">
            <summary>
            Index destinataire de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragAndDropEventArgs.DestinationAddress">
            <summary>
            Adresse destinataire de l'opération glisser-déposer
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteDragAndDropEventArgs.#ctor(System.String,VisualArrays.Sprite,System.Int32,VisualArrays.Address,System.Int32,VisualArrays.Address)">
            <summary>
            Fournit des informations concernant l'opération glisser-déposer
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSprite">Sprite source de l'opération glisser-déposer</param>
            <param name="pSourceIndex">Index source de l'opération glisser-déposer</param>
            <param name="pSourceAddress">Adresse source de l'opération glisser-déposer</param>
            <param name="pDestinationIndex">Index destinataire de l'opération glisser-déposer</param>
            <param name="pDestinationAddress">Adresse destinataire de l'opération glisser-déposer</param>
        </member>
        <member name="T:VisualArrays.CellDragAndDropEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.CellDragAndDropEventArgs.DestinationIndex">
            <summary>
            Index destinataire de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.CellDragAndDropEventArgs.DestinationAddress">
            <summary>
            Adresse destinataire de l'opération glisser-déposer
            </summary>
        </member>
        <member name="M:VisualArrays.CellDragAndDropEventArgs.#ctor(System.String,System.Int32,VisualArrays.Address,System.Int32,VisualArrays.Address)">
            <summary>
            Fournit des informations concernant l'opération glisser-déposer
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSourceIndex">Index source de l'opération glisser-déposer</param>
            <param name="pSourceAddress">Adresse source de l'opération glisser-déposer</param>
            <param name="pDestinationIndex">Index destinataire de l'opération glisser-déposer</param>
            <param name="pDestinationAddress">Adresse destinataire de l'opération glisser-déposer</param>
        </member>
        <member name="T:VisualArrays.ISelectable">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.ISelectable.SelectedIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.ISelectable.SelectionMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.ISelectable.SelectionSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.ISelectable.SelectionOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.ISelectable.SelectionColor">
            <summary>
            
            </summary>
        </member>
        <member name="E:VisualArrays.ISelectable.SelectedIndexChanged">
            <summary>
            
            </summary>
        </member>
        <member name="T:VisualArrays.ShapeSprite">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.ShapeSprite.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.ShapeSprite.Draw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="P:VisualArrays.ShapeSprite.Color">
            <summary>
            Obtient ou définit la couleur de la forme
            </summary>
        </member>
        <member name="P:VisualArrays.ShapeSprite.Shape">
            <summary>
            Obtient ou définit la forme de l'élément
            </summary>
        </member>
        <member name="P:VisualArrays.ShapeSprite.PenWidth">
            <summary>
            Obtient ou définit la taille du crayon qui dessine la forme.
            </summary>
        </member>
        <member name="T:VisualArrays.CellAppearance">
            <summary>
            Fournit les informations concernant l'apparence du fond d'une cellule
            </summary>
        </member>
        <member name="F:VisualArrays.CellAppearance.m_owner">
            <summary>
            Initialise un BackgroundAppearance object
            </summary>
        </member>
        <member name="M:VisualArrays.CellAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un CellAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="F:VisualArrays.CellAppearance.m_imageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la cellule en mode View ImageList
            </summary>
        </member>
        <member name="F:VisualArrays.CellAppearance.m_image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.ImageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la cellule en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.Shape">
            <summary>
            Obtient et définit la forme utilisée pour dessiner le fond de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.Image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.PenWidth">
            <summary>
            Obtient et définit la taille du crayon pour dessiner une forme contour.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.Style">
            <summary>
            Obtient et définit le style de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.Border">
            <summary>
            Obtient et définit la taille des bordures autour des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.BackgroundColor">
            <summary>
            Obtient et définit la couleur de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.VGDisabledAppearance">
            <summary>
            Fournit les informations concernant l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="M:VisualArrays.VGDisabledAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un SpecialValueAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire</param>
        </member>
        <member name="F:VisualArrays.VGDisabledAppearance.m_imageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la cellule en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.VGDisabledAppearance.ImageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la cellule en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.VGDisabledAppearance.TextColor">
            <summary>
            Obtient et définit la couleur de la valeur d'une cellule Enabled false.
            </summary>
        </member>
        <member name="P:VisualArrays.VGDisabledAppearance.Font">
            <summary>
            Obtient ou définit la police utilisée pour afficher la valeur d'une cellule Enabled false.
            </summary>
        </member>
        <member name="P:VisualArrays.VGDisabledAppearance.Show">
            <summary>
            Indique si la valeur doit être affichée lorsque la cellule est Enabled false
            </summary>
        </member>
        <member name="P:VisualArrays.VGDisabledAppearance.ImageBrightness">
            <summary>
            Obtient et définit une valeur entre 0 et 1 controlant la brillance
            </summary>
        </member>
    </members>
</doc>
